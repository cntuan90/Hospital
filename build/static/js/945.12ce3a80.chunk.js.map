{"version":3,"file":"static/js/945.12ce3a80.chunk.js","mappings":"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","sources":["components/atoms/Buttons/Round/RoundedDisableButton.tsx","pages/admin/staffManagement/styles.ts","pages/admin/staffManagement/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ButtonBase, ButtonBaseProps } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = () => ({\n  root: {\n    height: \"28px\",\n    width: \"210px\",\n    borderRadius: \"25px\",\n    padding: \"10px 22px\",\n    backgroundColor: \"none\",\n    margin: \"0 10px\",\n    // backgroundColor: \"#e0e0e0\",\n    color: \"#53abe0\",\n    transition: \"opacity 0.2s linear\",\n    \"& a\": {\n      color: \"#53abe0\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#606060\",\n      color: \"#ebebeb\",\n      \"& a\": {\n        backgroundColor: \"#606060\",\n        color: \"#ebebeb\",\n      },\n    },\n    \"&:disabled\": {\n      backgroundColor: \"#e0e0e0\",\n      color: \"#a7a7a7\",\n    },\n  },\n});\n\nconst ConditionsSearchButton = React.forwardRef<ButtonBaseProps, any>(\n  (props, ref) => (\n    <>\n      <ButtonBase ref={ref} {...props}>\n        {props.children}\n      </ButtonBase>\n    </>\n  )\n);\n\nexport default withStyles(styles)(ConditionsSearchButton);\n","import { Theme } from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    marginLeft: '1rem',\n  },\n  lineSpace: {\n    borderBottom: '1px solid rgba(196, 196, 196, 0.4)',\n    width: '100%',\n    margin: '10px 0',\n  },\n  setWidthDropdown: {\n    width: '60px',\n    marginRight: '5px',\n  },\n  cssSaveButton: {\n    width: '200px', \n  },\n  cssFooter: {\n    alignItems:'right',\n    display:'flex',\n    justifyContent:'flex-end',\n  },\n  cssButton: {\n    background: 'inherit',\n    width: '220px'\n  },\n  cssRowTable: {\n    fontSize: '16px !important',\n  },\n  cssNameTitle: {\n    color: theme.palette.primary.main,\n  },\n  cssDeleteBtn: {\n    width: '30px',\n    height: '30px',\n    borderRadius: 999,\n    background: 'inherit',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      background: 'rgba(196, 196, 196, 0.4)',\n      cursor: 'pointer',\n    },\n  },\n}));\nexport default useStyles;\n","import { Delete, UploadFile } from \"@mui/icons-material\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  FormControl,\n  TableCell,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { isArray } from \"lodash\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  adminGetStaffListApi,\n  deleteStaffDetailApi,\n  getListStaffFileCSV,\n  updateListStaffFileCSV,\n} from \"../../../api/adminApi\";\nimport RoundedDisableButton from \"../../../components/atoms/Buttons/Round/RoundedDisableButton\";\nimport DataTable from \"../../../components/DataTable\";\nimport ScreenLoader from \"../../../components/organisms/ScreenLoader\";\nimport { Store } from \"../../../redux/store\";\nimport { ROWS_PER_PAGES, USING_TEXT_LIST } from \"../../../utility/usingTexts\";\nimport useStyles from \"./styles\";\nimport { IAdminGetListStaffApi } from \"./type\";\n\nconst StaffManagement: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [listStaff, setListStaff] = useState<IAdminGetListStaffApi[]>([]);\n\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n  const ref = useRef<any>();\n\n  const { handleSubmit, control, watch, setValue, getValues } = useForm<any>({\n    mode: \"onChange\",\n    defaultValues: {\n      csvInput: null,\n    },\n  });\n\n  const columns: any[] = [\n    {\n      id: \"staffName\",\n      align: \"center\",\n      label: \"氏名\",\n      width: \"100px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            component=\"th\"\n            id={`enhanced-table-checkbox-${index}`}\n            scope=\"row\"\n            className={classes.cssRowTable}\n          >\n            <Link\n              to={`/staffManagement/edit/${row?.id}`}\n              className={classes.cssNameTitle}\n            >\n              {`${row?.last_name} ${row?.first_name}` || \"\"}\n            </Link>\n          </TableCell>\n        );\n      },\n    },\n    {\n      id: \"mailAddress\",\n      align: \"center\",\n      label: \"メールアドレス\",\n      width: \"200px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            className={classes.cssRowTable}\n          >\n            {row?.email || \"\"}\n          </TableCell>\n        );\n      },\n    },\n    {\n      id: \"group\",\n      align: \"center\",\n      label: \"グループ\",\n      width: \"150px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            className={classes.cssRowTable}\n          >\n            {row?.groups || \"\"}\n          </TableCell>\n        );\n      },\n    },\n    // {\n    //   id: \"action\",\n    //   align: \"center\",\n    //   label: \"\",\n    //   width: \"50px\",\n    //   content(row: any, index: number) {\n    //     return (\n    //       <TableCell key={index} align={this.align}>\n    //         <div\n    //           className={classes.cssDeleteBtn}\n    //           onClick={(e) => {\n    //             e.preventDefault();\n    //             handleClickOpen();\n    //             setDeleteId(row?.id);\n    //           }}\n    //         >\n    //           <Delete color=\"disabled\" />\n    //         </div>\n    //       </TableCell>\n    //     );\n    //   },\n    // },\n  ];\n\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    if (!selectedRows.length) return;\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelectItem = (itemSelected: number[]) =>\n    setSelectedRows(itemSelected);\n\n  const handleDeleteItem = async () => {\n    // if (!deleteId) return;\n    try {\n      setLoading(true);\n\n      const deletedIds = selectedRows.map((index) => listStaff[index].id);\n\n      const res = await deleteStaffDetailApi(deletedIds);\n      enqueueSnackbar(USING_TEXT_LIST.succeedDelete, { variant: \"success\" });\n      fetchData();\n      setSelectedRows([]);\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n      setOpen(false);\n    }\n  };\n\n  const handleExportCsv = async () => {\n    try {\n      setLoading(true);\n      const fileName = `スタッフ管理-${moment().format(\"YYYYMMDDHHmmss\")}`;\n\n      await getListStaffFileCSV(fileName);\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUploadCsv = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.item(0);\n    try {\n      setLoading(true);\n\n      await updateListStaffFileCSV(file);\n      fetchData();\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n      ref.current.value = \"\";\n    }\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const data = await adminGetStaffListApi();\n\n      if (isArray(data)) setListStaff(data);\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <ScreenLoader isLoading={isLoading}>\n      <Box className={classes.root} maxWidth=\"1200px\">\n        <DataTable\n          data={listStaff || []}\n          columns={columns}\n          // showDeleteAndCheckBoxIcon={false}\n          setHeaderColor=\"#e7e7e7\"\n          rowsPerPageOptions={ROWS_PER_PAGES}\n          onItemSelect={handleSelectItem}\n          onItemDelete={handleClickOpen}\n        />\n\n        <Box className={classes.lineSpace} />\n\n        <Box style={{ margin: \"1rem\" }}>\n          <RoundedDisableButton component=\"label\" className={classes.cssButton}>\n            <Link to={\"/staffManagement/add\"}>＋スタッフを追加する</Link>\n          </RoundedDisableButton>\n        </Box>\n\n        <Box style={{ margin: \"1rem\" }}>\n          <RoundedDisableButton component=\"label\" className={classes.cssButton}>\n            <a style={{ textDecoration: \"underline\" }}>CSVアップロード</a>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              ref={ref}\n              hidden={true}\n              onChange={handleUploadCsv}\n            />\n          </RoundedDisableButton>\n\n          <RoundedDisableButton\n            component=\"label\"\n            className={classes.cssButton}\n            onClick={handleExportCsv}\n          >\n            <a style={{ textDecoration: \"underline\" }}>CSV雛形ダウンロード</a>\n          </RoundedDisableButton>\n        </Box>\n\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            選択した項目を削除してもいいですか？\n          </DialogTitle>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              キャンセル\n            </Button>\n            <Button onClick={handleDeleteItem} color=\"primary\" autoFocus={true}>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </ScreenLoader>\n  );\n};\n\nexport default StaffManagement;\n"],"names":["ConditionsSearchButton","React","props","ref","ButtonBase","children","withStyles","root","height","width","borderRadius","padding","backgroundColor","margin","color","transition","makeStyles","theme","createStyles","marginLeft","lineSpace","borderBottom","setWidthDropdown","marginRight","cssSaveButton","cssFooter","alignItems","display","justifyContent","cssButton","background","cssRowTable","fontSize","cssNameTitle","palette","primary","main","cssDeleteBtn","cursor","classes","useStyles","useHistory","useState","isLoading","setLoading","enqueueSnackbar","useSnackbar","listStaff","setListStaff","selectedRows","setSelectedRows","useRef","useForm","mode","defaultValues","csvInput","columns","handleSubmit","control","watch","setValue","getValues","id","align","label","content","row","index","i","TableCell","this","component","scope","className","to","last_name","first_name","email","groups","open","setOpen","handleClose","handleDeleteItem","deletedIds","map","deleteStaffDetailApi","USING_TEXT_LIST","variant","fetchData","errList","response","data","messages","isArray","length","forEach","item","errors","handleExportCsv","fileName","moment","format","getListStaffFileCSV","handleUploadCsv","e","file","target","files","updateListStaffFileCSV","current","value","adminGetStaffListApi","useEffect","ScreenLoader","Box","maxWidth","DataTable","setHeaderColor","rowsPerPageOptions","ROWS_PER_PAGES","onItemSelect","itemSelected","onItemDelete","style","RoundedDisableButton","textDecoration","type","hidden","onChange","onClick","Dialog","onClose","DialogTitle","DialogActions","Button","autoFocus"],"sourceRoot":""}