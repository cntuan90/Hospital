{"version":3,"file":"static/js/668.bfc6c3c5.chunk.js","mappings":"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","sources":["api/adminApi.ts","components/organisms/ScreenLoader/ScreenLoader.tsx","components/organisms/ScreenLoader/index.ts","components/organisms/Calendar/styles.ts","pages/admin/shiftBoardManagement/edit/context.js","components/organisms/Calendar/index.tsx","pages/admin/shiftBoardManagement/components/functions.tsx","pages/admin/shiftBoardManagement/hook/actions.ts","pages/admin/shiftBoardManagement/components/CheckboxStatus.tsx","pages/admin/shiftBoardManagement/components/rowChild/index.tsx","pages/admin/shiftBoardManagement/components/DataTableBody.tsx","pages/admin/shiftBoardManagement/components/DataTableHead.tsx","pages/admin/shiftBoardManagement/hook/reducer.ts","pages/admin/shiftBoardManagement/hook/hook.tsx","pages/admin/shiftBoardManagement/edit/styles.ts","pages/admin/shiftBoardManagement/edit/index.tsx","utility/usingTexts.ts"],"sourcesContent":["import { IAdminGroupSettingGetApi, IAdminGroupSettingPostApi, IListStaffGetApi } from '../pages/admin/adminSetting/group/type';\nimport { IAdminHolidaySettingGetApi } from '../pages/admin/adminSetting/holiday/type';\nimport { IAdminEntrySettingGetApi, IAdminEntrySettingPostApi } from '../pages/admin/adminSetting/initialization/type';\nimport { IRequiredStaffSettingGetApi, IRequiredStaffSettingPostObj } from '../pages/admin/adminSetting/requiredStaffs/type';\nimport { IAdminNotificatinSettingGetApi } from '../pages/admin/adminSetting/notification/type';\nimport ApiClient from './ApiClient';\nimport { IAdminGetListStaffApi, IGetStaffDetailApi } from '../pages/admin/staffManagement/type';\nimport { IShiftBoardManageGetApi } from '../pages/admin/shiftBoardManagement/type';\nimport { IDetailShiftBoardManagementGetApi, IDetailShiftBoardManagementParams, IShiftBoardManageGetDetailApi } from '../pages/admin/shiftBoardManagement/edit/type';\n\n// ---------------Initialization Setting-------------------------\n\nexport const adminInitializationSettingApi = async (params: IAdminEntrySettingPostApi): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/setting/entryShiftSetting', {}, params);\n  return data;\n};\n\nexport const adminInitializationGetListApi = async (): Promise<IAdminEntrySettingGetApi> => {\n  const { data } = await ApiClient.get('/api/setting/listShiftSetting', {});\n  return data;\n};\n\n// ---------------Group Setting-------------------------\n\nexport const adminGroupSettingGetApi = async (): Promise<IAdminGroupSettingGetApi> => {\n  const { data } = await ApiClient.postJsonData('/api/group/getListAssignment', {}, {});\n  return data;\n};\n\nexport const adminGroupSettingGetListStaffApi = async (): Promise<IListStaffGetApi[]> => {\n  const { data } = await ApiClient.get('/api/staff/listStaff', {});\n  return data;\n};\n\nexport const adminGroupSettingApi = async (params: IAdminGroupSettingPostApi): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/group/createGroup', {}, params);\n  return data;\n};\n\nexport const adminGroupSettingDeleteApi = async (id: number): Promise<any> => {\n  const params = {\n    id: [id],\n  }\n  await ApiClient.postJsonData('/api/group/deleteGroup', {}, params);\n};\n\n// ---------------Required Staff Setting-------------------------\n\nexport const adminRequiredStaffSettingGetApi = async (): Promise<IRequiredStaffSettingGetApi[]> => {\n  const { data } = await ApiClient.get('/api/group/getListGroup', {} );\n  return data;\n};\n\nexport const adminRequiredStaffSettingSaveApi = async (params: IRequiredStaffSettingPostObj): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/setting/group/setRequireNumber', {}, params);\n  return data;\n};\n\n// ---------------Holiday Setting-------------------------\nexport const adminHolidaySettingGetApi = async (): Promise<IAdminHolidaySettingGetApi[]> => {\n  const { data } = await ApiClient.get('/api/setting/listHoildaySetting', {});\n  return data;\n};\n\nexport const adminHolidaySettingSaveApi = async (params: any): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/setting/entryHolidaySetting', {}, params);\n  return data;\n};\n\nexport const adminHolidaySettingDeleteApi = async (id: any): Promise<any> => {\n  const params = { \n    id: [id],\n  };\n  const { data } = await ApiClient.postJsonData('/api/setting/deleteHoliday', {}, params);\n  return data;\n};\n\n// ---------------Notification Setting-------------------------\nexport const adminNotificatinSettingGetApi = async (): Promise<IAdminNotificatinSettingGetApi> => {\n  const { data } = await ApiClient.get('/api/setting/listNotificationSetting', {});\n  return data;\n};\n\nexport const adminNotificatinSettingSaveApi = async (params: any): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/setting/entryNotificationSetting', {}, params);\n  return data;\n};\n\n// ---------------Change Info Setting-------------------------\nexport const adminChangeInfoSettingSaveApi = async (params: any): Promise<any> => {\n  const { data } = await ApiClient.postJsonData('/api/setting/updateInfoAdmin', {}, params);\n  return data;\n};\n\n// ---------------Admin Staff Management Setting-------------------------\nexport const adminGetStaffListApi = async (): Promise<IAdminGetListStaffApi[]> => {\n  const { data } = await ApiClient.get('/api/staff/listStaffWithGroup', {});\n  return data;\n};\n\nexport const adminGetStaffDetailApi = async (id: string): Promise<IGetStaffDetailApi> => {\n  const { data } = await ApiClient.get(`/api/staff/detailStaff?id=${id}`, {});\n  return data;\n};\n\nexport const getListStaffFileCSV = async (filename: string): Promise<any> => {\n  await ApiClient.downloadCsv('/api/staff/downloadStaff', {}, filename );\n};\n\nexport const updateListStaffFileCSV = async (filename: any): Promise<any> => {\n  const params = {\n    upload_file: filename,\n  }\n  await ApiClient.postMutipartData('/api/staff/uploadStaff', {}, params);\n};\n\nexport const deleteStaffDetailApi = async (id: number[]) => {\n  const params = {\n    id,\n  }\n  await ApiClient.postJsonData('/api/staff/deleteStaff', {}, params);\n}\n\nexport const adminAddStaffPostApi = async (params: any): Promise<void> => {\n  const { data } = await ApiClient.postJsonData('/api/staff/createStaff', {}, params);\n  return data;\n};\n\nexport const adminUpdateStaffPostApi = async (params: any): Promise<void> => {\n  const { data } = await ApiClient.postJsonData('/api/staff/updateStaff', {}, params);\n  return data;\n};\n\n// ---------------Shift Board Management Setting-------------------------\nexport const getShiftBoardManagementListApi = async (): Promise<IShiftBoardManageGetApi[]> => {\n  const { data } = await ApiClient.get('/api/management/list', {});\n  return data;\n};\n``\nexport const getDetailShiftBoardMangementApi = async (params: IDetailShiftBoardManagementParams): Promise<IShiftBoardManageGetDetailApi[]> => {\n  const { data } = await ApiClient.postJsonData('/api/management/getAllStaffShiftDetail', {}, params);\n  return data;\n};\n\nexport const adminUpdateStaffDetailTargetSetting = async (params: any): Promise<void> => {\n  const { data } = await ApiClient.postJsonData('/api/management/updateTargetShiftNumber', {}, params);\n  return data;\n};\n\nexport const adminSaveDraftOrPublishShiftAssignmentApi = async (params: any): Promise<void> => {\n  const { data } = await ApiClient.postJsonData('/api/management/adminShiftRegister', {}, params);\n  return data;\n};","import { Backdrop, CircularProgress, Theme } from '@mui/material';\nimport {createStyles, makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst ScreenLoader: React.FC<{\n  isLoading?: boolean;\n}> = ({ children, isLoading = false }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Backdrop className={classes.backdrop} open={isLoading} onClick={() => {}}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {children}\n    </>\n  );\n};\nexport default ScreenLoader;\n","import ScreenLoader from './ScreenLoader';\n\nexport default ScreenLoader;\n","import { Theme } from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: '100%',\n  },\n  cssSaveButton: {\n    width: '150px',\n  },\n  setStyleCalendar: {\n    minHeight: '480px',\n    maxWidth: '500px',\n    '& .MuiButtonBase-root': {\n      cursor: 'default',\n    },\n    '& .MuiTypography-root':{\n      width: '100px',\n      fontSize: '24px !important',\n      margin: 0,\n      border: '1px solid #fff',\n      color: '#fff',\n      background: theme.palette.primary.light,\n    },\n    '& .MuiPickersCalendarHeader-switchHeader':{\n      '& p':{\n        position: 'none !important',\n        backgroundColor: '#fff !important',\n        color: '#000 !important',\n      },\n      // '& .Mui-disabled': {\n      //   pointerEvents: 'none',\n      //   cursor: 'not-allowed',\n      //   opacity: '0.65',\n      //   boxShadow: 'none',\n      // },\n    },\n    '& .MuiPickersCalendarHeader-daysHeader':{\n      maxHeight: 'none',\n    },\n    '& .MuiPickersCalendarHeader-transitionContainer':{\n      display: 'flex',\n      alignItem: 'center',\n      justifyContent: 'center',\n      border: '1px solid #fff',\n      color: '#fff',\n      background: '#fff',\n      height: '40px !important',\n      '& p' : {\n        display: 'inline-block',\n        width: '100%',\n      },\n      '& button': {\n        disabled: true,\n      }\n    },\n    '& .MuiTypography-caption':{\n      padding: '5px 0',\n    },\n  },\n  setStyleDayInCalendar: {\n    '& p': {\n      backgroundColor: '#fff !important',\n      color: '#000 !important',\n    },\n    '& button:hover': {\n      backgroundColor: 'inherit',\n      cursor: 'default',\n    },\n    '& .MuiPickersDay-daySelected': {\n      backgroundColor: '#fff !important',\n    },\n    '& .MuiGrid-root': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItem: 'center',\n      justifyContent: 'center',\n    },\n  },\n  setStyleShiftStatusCircle: {\n    display: 'block !important', \n    marginTop: '1px',\n    margin: 'auto', \n    border: '2px solid #000', \n    borderRadius: '100%', \n    color: '#fff',\n    width: '23px !important',\n    height: '23px !important',\n  },\n  setStyleShiftStatusTriangle: {\n    display: 'block !important', \n    margin: 'auto', \n  },\n  setStyleShiftStatusClose: {\n    display: 'block !important', \n    margin: 'auto', \n  },\n\n  paddingTooltip: {\n    color: '#fff',\n    padding: '8px',\n    fontSize: '0.7rem',\n    maxWidth: '300px',\n    wordWrap: 'break-word',\n    fontFamily: 'Roboto,Helvetica,Arial,sans-serif',\n    fontWeight: 500,\n    letterSpacing: '1px',\n    lineHeight: '1.4em',\n    borderTadius: '4px',\n    backgroundColor: 'rgba(96, 96, 96, 0.9)',\n    display: 'inline-block',\n    '& .makeStyles-setStyleCalendar-137 p': {\n      fontSize: '5px',\n      display: 'inline-block',\n    }\n  },\n  tableEllipsis: {\n    display: 'inline-block',\n    textAlign: 'center',\n    // width: '40px !important',\n    width: 'auto',\n    whiteSpace: 'nowrap',\n    lineHeight: '16px',\n    fontSize: '15px !important',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '100px',\n    maxHeight: '30px',\n    tableLayout: 'fixed',\n  },\n  setColorCalendarDay: {\n    '& p': {\n      color: '#b7bbbf !important',\n    },\n  }\n}));\nexport default useStyles;\n","import { createContext } from \"react\";\n\nconst TodosDispatch = createContext();\n\nexport default TodosDispatch;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport momentUtils from \"@date-io/moment\";\nimport {\n  Badge,\n  createTheme,\n  Grid,\n  Tooltip,\n  Typography,\n  Zoom,\n} from \"@mui/material\";\nimport ScreenLoader from \"../ScreenLoader\";\nimport { Calendar, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { ThemeProvider } from \"@mui/styles\";\nimport { Circle } from \"@mui/icons-material\";\nimport ChangeHistoryIcon from \"@mui/icons-material/ChangeHistory\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport useStyles from \"./styles\";\nimport PillButton from \"../../atoms/Buttons/PillButton\";\nimport TodosDispatch from \"../../../pages/admin/shiftBoardManagement/edit/context\";\nimport { setHeaderAssignedStaffName } from \"../../../pages/admin/shiftBoardManagement/hook/actions\";\n\nfunction CustomCalendar({\n  handleSaveFromChild,\n}: {\n  handleSaveFromChild: (list: any) => void;\n}) {\n  const classes = useStyles();\n  const { state: { staffInfoOnCalendar, tableHeaderAssignedStaffname }, dispatch } = useContext(TodosDispatch);\n\n  class LocalizedUtils extends momentUtils {\n    // eslint-disable-next-line class-methods-use-this\n    getCalendarHeaderText(date: moment.MomentInput) {\n      // return moment(date).format('YYYY年M月');\n      return `${staffInfoOnCalendar.staffName}先生 希望表`;\n    }\n  }\n\n  const [selectedDate, setSelectedDate] = useState<moment.Moment>(\n    moment(tableHeaderAssignedStaffname[0]?.date_info[0]?.date)\n  );\n\n  const [daysOnCalendar, setDaysOnCalendar] = useState<any[]>([]);\n\n  const handleDateChange = (date: moment.Moment | null) => {\n    setSelectedDate(moment(date !== null ? date : tableHeaderAssignedStaffname[0]?.date_info[0]?.date));\n  };\n\n  const [shiftStatusList, setShiftStatusList] = useState<any[]>(\n    Array.from({ length: moment(tableHeaderAssignedStaffname[0]?.date_info[0]?.date).daysInMonth() }, (_, i) => {\n      return {\n        date: `${moment(tableHeaderAssignedStaffname[0]?.date_info[0]?.date).format(\"YYYY\")}-${moment(tableHeaderAssignedStaffname[0]?.date_info[0]?.date).format(\"MM\")}-${i + 1}`,\n        status: \"0\",\n      };\n    })\n  );\n\n  const showShiftStatus = (date: any) => {\n    let isShow = \"0\";\n    shiftStatusList.forEach((item) => {\n      if (\n        moment(item.date).format(\"YYYY-MM-DD\") ===\n        moment(date).format(\"YYYY-MM-DD\")\n      ) {\n        isShow = item.status;\n      }\n    });\n\n    switch (isShow) {\n      case \"0\":\n        return;\n      case \"1\":\n        return <CloseIcon className={classes.setStyleShiftStatusClose} />;\n      case \"2\":\n        return <Circle className={classes.setStyleShiftStatusCircle} />\n      // case \"3\":\n      //   return (\n      //     <ChangeHistoryIcon className={classes.setStyleShiftStatusTriangle} />\n      //   );\n      default:\n        break;\n    }\n  };\n\n  const handleChangeShiftStatusOnCalendar = (date: string) => {\n    let tempArr = [...shiftStatusList];\n    shiftStatusList.forEach((item, index) => {\n      if (moment(item.date).format(\"YYYY-MM-DD\") === date) {\n        tempArr[index].status = String(Number(tempArr[index].status) + 1);\n        if (Number(tempArr[index].status) > 2) tempArr[index].status = \"0\";\n      }\n    });\n    setShiftStatusList(tempArr);\n  };\n\n  const theme = createTheme({\n    components: {\n      MuiButtonBase: {\n        styleOverrides: {\n          root: {\n            background: \"#D8E3C0\",\n          },\n        },\n      },\n    },\n  });\n\n  moment.locale(\"ja\", {\n    months: [\n      \"１月\",\n      \"2月\",\n      \"3月\",\n      \"4月\",\n      \"5月\",\n      \"６月\",\n      \"７月\",\n      \"８月\",\n      \"９月\",\n      \"１０月\",\n      \"１１月\",\n      \"１２月\",\n    ],\n    weekdays: tableHeaderAssignedStaffname[0]?.calendar_start_week_day === 0 ? [\n      \"月曜日\",\n      \"火曜日\",\n      \"水曜日\",\n      \"木曜日\",\n      \"金曜日\",\n      \"土曜日\",\n      \"日曜日\",\n    ] : [\n      \"日曜日\",\n      \"月曜日\",\n      \"火曜日\",\n      \"水曜日\",\n      \"木曜日\",\n      \"金曜日\",\n      \"土曜日\",\n    ],\n    weekdaysShort: tableHeaderAssignedStaffname[0]?.calendar_start_week_day === 0 ? [\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"] : [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n  });\n\n  useEffect(() => {\n    if (staffInfoOnCalendar?.shift_detail?.length === 0) return;\n    const formattedShiftDetail = staffInfoOnCalendar?.shift_detail?.map((item: any) => {\n      return {\n        date: item?.date_register,\n        status: item?.shift_detail_status === 2 ? '2' : (item?.shift_detail_status === 1 ? '1' : ''),\n      }\n    })\n\n    setShiftStatusList(formattedShiftDetail || []);\n    setSelectedDate(moment(tableHeaderAssignedStaffname[0]?.date_info[0]?.date));\n    setDaysOnCalendar(tableHeaderAssignedStaffname[0]?.date_info?.map((item: any) => item?.date).map((val: any) => Number(moment(val).format('DD'))))\n  }, [staffInfoOnCalendar])\n\n  return (\n    <>\n      <div style={{ padding: \"16px auto\", border: '2px solid grey' }} className={classes.setStyleCalendar}>\n        <ScreenLoader isLoading={false}>\n          <ThemeProvider theme={theme}>\n            <MuiPickersUtilsProvider\n              libInstance={moment}\n              utils={LocalizedUtils}\n              locale=\"ja\"\n            >\n              <div\n                style={{\n                  maxWidth: \"460px\",\n                }}\n              >\n                <Calendar\n                  rightArrowButtonProps={{\n                    style: {\n                      opacity: 0,\n                      pointerEvents: \"none\",\n                    },\n                  }}\n                  leftArrowButtonProps={{\n                    style: {\n                      opacity: 0,\n                      pointerEvents: \"none\",\n                    },\n                  }}\n                  date={selectedDate}\n                  onChange={handleDateChange}\n                  allowKeyboardControl={true}\n                  renderDay={(\n                    day,\n                    selectedDate,\n                    dayInCurrentMonth,\n                    dayComponent\n                  ) => {\n                    return (\n                      <Badge\n                        style={{\n                          opacity: dayComponent ? 1 : 0,\n                          width: \"66px\",\n                          height: \"70px\",\n                          display: \"flex\",\n                          textAlign: \"center\",\n                          justifyContent: \"center\",\n                          marginRight: \"-1px\",\n                          marginTop: \"-1px\",\n                          minWidth: \"24px\",\n                        }}\n                        onClick={() => {\n                          handleChangeShiftStatusOnCalendar(\n                            moment(day).format(\"YYYY-MM-DD\")\n                          );\n                        }}\n                      >\n                        <Grid\n                          item={true}\n                          className={classes.setStyleDayInCalendar}\n                        >\n                          <div className={`${!daysOnCalendar.includes(Number(moment(day).format('DD'))) ? classes.setColorCalendarDay : ''}`}>\n                            {dayComponent}\n                          </div>\n                          {!!dayInCurrentMonth && showShiftStatus(day)}\n                        </Grid>\n                      </Badge>\n                    );\n                  }}\n                />\n              </div>\n            </MuiPickersUtilsProvider>\n          </ThemeProvider>\n        </ScreenLoader>\n      </div>\n      <PillButton\n        type=\"button\"\n        className={classes.cssSaveButton}\n        style={{ background: \"#27a8e0\", color: \"#fff\", fontSize: \"20px\", marginTop: '2rem' }}\n        onClick={() => handleSaveFromChild(shiftStatusList)}\n      >\n        保存\n      </PillButton>\n    </>\n  );\n}\n\nexport default CustomCalendar;\n","import moment from \"moment\";\n\n// export const getTitleOfWeekday = (date: string) => {\n//   if (moment(date).isoWeekday() < 6) {\n//     return \"平\";\n//   } else if (moment(date).isoWeekday() === 6) {\n//     return \"土\";\n//   } else {\n//     return \"日/祝\";\n//   }\n// };\n\nexport const returnLeftWidth = (dateType: number) => {\n  // 230 is 1st & 2nd column width sum\n  if (dateType === 3) return (200 + 230); //200 is width of 4 col\n  if (dateType === 2) return (165 + 230); //165 is width of 3 col\n  if (dateType === 1) return (140 + 230); //140 is width of 2 col\n  return (80 + 230); //80 is width of 1 col\n}\n\nexport const returnWidthOfDateType = (dateType: number) => {\n  if (dateType === 0) return 80;\n  if (dateType === 1) return 70;\n  if (dateType === 2) return 55;\n  return 50;\n}\n\nexport const formatTableAssignedStaffName = (data: any[] = []) => {\n  const arr: any[] = [...data].map((item, i) => {\n    return (\n      {\n        ...item,\n        date_info: [...item.date_info].map((dateData: any) => (\n          {\n            ...dateData,\n            assigned_staff_name: [],\n            assigned_staffs: 0,\n          }\n        )),\n        list_staff_detail: [...item.list_staff_detail].map((staff: any) => (\n          {\n            ...staff,\n            shift_detail: [...staff.shift_detail].map((detail: any) => (\n              {\n                ...detail,\n                shift_detail_status: detail?.shift_detail_status === '' ? 0 : Number(detail?.shift_detail_status),\n                admin_assign_status: detail?.admin_assign_status === '' ? 0 : Number(detail?.admin_assign_status),\n                isSelectedOtherGrp: false,\n              }\n            )),\n          }\n        )),\n      }\n    )\n  }\n  );\n  return arr;\n}\n\nexport const formatListTotalAssignedStaffs = (data: any[] = []) => {\n  let arr: any[] = [...data[0].date_info].map((item) => (\n    {\n      ...item,\n      assigned_staffs: 0,\n      number_staff: 0,\n    }\n  ));\n\n  [...data].forEach((itemData) => {\n    itemData?.date_info?.forEach((itemVal: any) => {\n      arr.forEach((arrVal: any, i) => {\n        if (itemVal.date === arrVal.date) {\n          arr[i].number_staff += itemVal.number_staff;\n        }\n      })\n    })\n  });\n  return arr;\n}\n\nexport const formatTableHederListDate = (data: any[] = []) => {\n  const arr: any[] = [...data].map((item, i) => (\n    {\n      // id: `businessDay_${String(i)}`,\n      align: \"center\",\n      date: item?.date || '',\n      width: \"120px\",\n      label: String(item?.date_type) || '',\n      // dateNum: `${moment(\n      //   `${moment().format(\"YYYY\")}/${item?.date}`\n      // ).isoWeekday()}`,\n    }\n  ));\n  return arr;\n}\n\nexport const showDateTypeColumn = (dateType?: number) => {\n  if (dateType === 3) return 4;\n  if (dateType === 2) return 3;\n  if (dateType === 1) return 2;\n  return 1\n}\n\nexport const setOnOffCheckboxStatus = (tableHeaderAssignedStaffname: any[] = [], groupId: string = '', staffId: string = '', date: string = '') => {\n  const newData = tableHeaderAssignedStaffname.map((item: any) => {\n    if (item.group_id === groupId) {\n      return {\n        ...item,\n        list_staff_detail: item.list_staff_detail.map((staff: any) => {\n          if (staff.staff_id === staffId) {\n            return {\n              ...staff,\n              shift_detail: staff.shift_detail.map((detail: any, i: number) => {\n                if (detail.date_register === date) {\n                  return {\n                    ...detail,\n                    admin_assign_status: detail.admin_assign_status === 1 ? 0 : 1,\n                  }\n                } else {\n                  return {\n                    ...detail,\n                  }\n                }\n              }),\n            }\n          } else {\n            return {\n              ...staff,\n            }\n          }\n        })\n      }\n    } else {\n      return {\n        ...item,\n      }\n    }\n  })\n\n  return newData;\n}\n\nexport const checkDateType = (dateTypeArr: any[] = [], date: string = '') => {\n  let dateType: string = '';\n  dateTypeArr.forEach((item: any) => {\n    if (item?.date === date) dateType = item?.date_type;\n  })\n  return dateType;\n}\n\nexport const calculateAssignedDaysOfStaffByDateType = (dateTypeArr: any[] = [], checkArr: any[] = []) => {\n  const assignedDaysOfStaffByDateType = checkArr.map((item: any) => {\n    return {\n      ...item,\n      list_staff_detail: item?.list_staff_detail.map((staff: any) => {\n        let admin_assigned_weekday = 0;\n        let admin_assigned_saturday = 0;\n        let admin_assigned_sunday = 0;\n        let admin_assigned_holiday = 0;\n        staff?.shift_detail?.forEach((detail: any) => {\n          if (detail?.admin_assign_status === 1) {\n            const getDateType: string = checkDateType(dateTypeArr, detail?.date_register);\n            switch (getDateType) {\n              case '平':\n                admin_assigned_weekday += 1;\n                break;\n              case '土':\n                admin_assigned_saturday += 1;\n                break;\n              case '日':\n                admin_assigned_sunday += 1;\n                break;\n              case '祝':\n                admin_assigned_holiday += 1;\n                break;\n              default:\n                break;\n            }\n          }\n        })\n        return {\n          ...staff,\n          admin_assigned_weekday,\n          admin_assigned_saturday,\n          admin_assigned_sunday,\n          admin_assigned_holiday,\n        }\n      })\n    }\n  })\n\n  return assignedDaysOfStaffByDateType;\n}\n\nexport const setAlertWhenContinuousCheck = (newData: any[] = [], groupId: string = '', staffId: string = '') => {\n  const setAlertData = newData.map((item: any) => {\n    if (item.group_id === groupId) {\n      return {\n        ...item,\n        list_staff_detail: item.list_staff_detail.map((staff: any) => {\n          if (staff.staff_id === staffId) {\n            return {\n              ...staff,\n              shift_detail: staff.shift_detail.map((detail: any, i: number) => {\n                if (detail.admin_assign_status === 1 && (staff.shift_detail[i - 1]?.admin_assign_status === 1 || staff.shift_detail[i + 1]?.admin_assign_status === 1)) {\n                  return {\n                    ...detail,\n                    isAlert: true,\n                  }\n                } else if (staff.shift_detail[i - 1]?.admin_assign_status === 1 || staff.shift_detail[i + 1]?.admin_assign_status === 1) {\n                  return {\n                    ...detail,\n                    isAlert: false,\n                    isGrey: true,\n                  }\n                } else {\n                  return {\n                    ...detail,\n                    isAlert: false,\n                    isGrey: false,\n                  }\n                }\n\n              }),\n            }\n          } else {\n            return {\n              ...staff,\n            }\n          }\n        })\n      }\n    } else {\n      return {\n        ...item,\n      }\n    }\n  })\n\n  return setAlertData;\n}\n\nexport const checkIsSelectedOtherGroup = (setAlertData: any[] = []) => {\n  const checkIsSelectedOtherGrp = [...setAlertData].map((item: any) => {\n    return {\n      ...item,\n      list_staff_detail: item.list_staff_detail.map((staff: any) => {\n        return {\n          ...staff,\n          shift_detail: staff.shift_detail.map((detail: any, i: number) => {\n            const obj = { ...detail };\n            if (detail.admin_assign_status === 1) {\n              [...setAlertData].forEach((temp: any) => {\n                if (temp.group_id !== item.group_id) {\n                  temp.list_staff_detail.forEach((tempDetail: any) => {\n                    if (tempDetail.staff_id === staff.staff_id) {\n                      tempDetail.shift_detail.forEach((dateDetail: any) => {\n                        if (dateDetail.date_register === detail.date_register && dateDetail.admin_assign_status === 1) {\n                          obj.isSelectedOtherGrp = true;\n                        }\n                      })\n                    }\n                  })\n                }\n              })\n            } else {\n              obj.isSelectedOtherGrp = false;\n            }\n            return obj;\n          }),\n        }\n      })\n    }\n  })\n\n  return checkIsSelectedOtherGrp;\n}\n\nexport const addStaffNameAndCalculateSubtotal = (checkIsSelectedOtherGrp: any[] = [], groupId: string = '', staffId: string = '', staffName: string = '', date: string = '', isCheck: boolean = false) => {\n  const addStaffNameToHeader = checkIsSelectedOtherGrp.map((item: any) => {\n    if (item.group_id === groupId) {\n      return {\n        ...item,\n        date_info: item.date_info.map((val: any) => {\n          if (val.date === date && isCheck) {\n            const obj = {\n              staff_id: staffId,\n              staff_name: staffName,\n            }\n            return {\n              ...val,\n              assigned_staffs: Number(val.assigned_staffs + 1),\n              assigned_staff_name: [...val.assigned_staff_name, obj],\n            }\n          } else if (val.date === date && !isCheck) {\n            return {\n              ...val,\n              assigned_staffs: Number(val.assigned_staffs - 1),\n              assigned_staff_name: val.assigned_staff_name.filter((staff: any) => staff.staff_id !== staffId),\n            }\n          } else {\n            return {\n              ...val,\n            }\n          }\n        }),\n      }\n    } else {\n      return {\n        ...item,\n      }\n    }\n  })\n\n  return addStaffNameToHeader;\n}\n\nexport const calculateTotalAssignedStaffs = (tableHeaderTotalAssignedStaffs: any = [], date: string = '', isCheck: boolean = false) => {\n  const cloneTableHeaderTotalAssignedStaffs = [...tableHeaderTotalAssignedStaffs].map((val, i) => {\n    if (val.date === date && isCheck) {\n      return {\n        ...val,\n        assigned_staffs: Number(val.assigned_staffs += 1),\n      }\n    } else if (val.date === date && !isCheck) {\n      return {\n        ...val,\n        assigned_staffs: Number(val.assigned_staffs -= 1),\n      }\n    } return {\n      ...val,\n    }\n  })\n\n  return cloneTableHeaderTotalAssignedStaffs;\n}\n\nexport const handleFormatDataWithCheckbox = (data: any = []) => {\n  if (data?.length === 0) return [];\n\n  // Set alert when >= 2 continous checked cells\n  const setAlertData = data?.map((item: any) => {\n    return {\n      ...item,\n      list_staff_detail: item.list_staff_detail.map((staff: any) => {\n        return {\n          ...staff,\n          shift_detail: staff.shift_detail.map((detail: any, i: number) => {\n            if (detail.admin_assign_status === 1 && (staff.shift_detail[i - 1]?.admin_assign_status === 1 || staff.shift_detail[i + 1]?.admin_assign_status === 1)) {\n              return {\n                ...detail,\n                isAlert: true,\n              }\n            } else if (staff.shift_detail[i - 1]?.admin_assign_status === 1 || staff.shift_detail[i + 1]?.admin_assign_status === 1) {\n              return {\n                ...detail,\n                isAlert: false,\n                isGrey: true,\n              }\n            } else {\n              return {\n                ...detail,\n                isAlert: false,\n                isGrey: false,\n              }\n            }\n\n          }),\n        }\n      })\n    }\n  })\n\n  const checkIsSelectedOtherGrp = [...setAlertData].map((item: any) => {\n    return {\n      ...item,\n      list_staff_detail: item.list_staff_detail.map((staff: any) => {\n        return {\n          ...staff,\n          shift_detail: staff.shift_detail.map((detail: any, i: number) => {\n            const obj = { ...detail };\n            if (detail.admin_assign_status === 1) {\n              [...setAlertData].forEach((temp: any) => {\n                if (temp.group_id !== item.group_id) {\n                  temp.list_staff_detail.forEach((tempDetail: any) => {\n                    if (tempDetail.staff_id === staff.staff_id) {\n                      tempDetail.shift_detail.forEach((dateDetail: any) => {\n                        if (dateDetail.date_register === detail.date_register && dateDetail.admin_assign_status === 1) {\n                          obj.isSelectedOtherGrp = true;\n                        }\n                      })\n                    }\n                  })\n                }\n              })\n            } else {\n              obj.isSelectedOtherGrp = false;\n            }\n            return obj;\n          }),\n        }\n      })\n    }\n  })\n\n  const assignedDaysOfStaffByDateType = checkIsSelectedOtherGrp.map((item: any) => {\n    return {\n      ...item,\n      list_staff_detail: item?.list_staff_detail.map((staff: any) => {\n        let admin_assigned_weekday = 0;\n        let admin_assigned_saturday = 0;\n        let admin_assigned_sunday = 0;\n        let admin_assigned_holiday = 0;\n        staff?.shift_detail?.forEach((detail: any) => {\n          if (detail?.admin_assign_status === 1) {\n            const getDateType: string = checkDateType(checkIsSelectedOtherGrp[0].date_info, detail?.date_register);\n            switch (getDateType) {\n              case '平':\n                admin_assigned_weekday += 1;\n                break;\n              case '土':\n                admin_assigned_saturday += 1;\n                break;\n              case '日':\n                admin_assigned_sunday += 1;\n                break;\n              case '祝':\n                admin_assigned_holiday += 1;\n                break;\n              default:\n                break;\n            }\n          }\n        })\n        return {\n          ...staff,\n          admin_assigned_weekday,\n          admin_assigned_saturday,\n          admin_assigned_sunday,\n          admin_assigned_holiday,\n        }\n      })\n    }\n  })\n\n  const addStaffNameToHeader = assignedDaysOfStaffByDateType.map((item: any) => {\n    return {\n      ...item,\n      date_info: item.date_info.map((val: any) => {\n        const objDate = { ...val };\n\n        item?.list_staff_detail.forEach((staff: any) => {\n          staff?.shift_detail?.forEach((detail: any) => {\n            if (val.date === detail?.date_register && detail?.admin_assign_status === 1) {\n              objDate.assigned_staffs = Number(val.assigned_staffs + 1);\n              objDate.assigned_staff_name = [...objDate.assigned_staff_name, {\n                staff_id: staff?.staff_id,\n                staff_name: staff?.staff_name,\n              }];\n            }\n          })\n        })\n\n        return objDate;\n      }),\n    }\n  })\n\n  return addStaffNameToHeader;\n}\n\nexport const calculateTotalAssignedStaffWithCheckBox = (origindata: any = [], checkData: any = []) => {\n  const cloneData = [...checkData].map((val, i) => {\n    const tempObj = { ...val };\n\n    [...origindata]?.forEach((temp: any) => {\n      temp?.list_staff_detail?.forEach((staff: any) => {\n        staff?.shift_detail?.forEach((detail: any) => {\n          if (val.date === detail?.date_register && detail?.admin_assign_status === 1) {\n            tempObj.assigned_staffs = Number(val.assigned_staffs += 1);\n          }\n        })\n      })\n    })\n\n    return tempObj;\n  })\n\n  return cloneData;\n}","import { IShiftBoardManageGetDetailApi } from \"../edit/type\";\n\nexport const types = {\n  SET_HOLIDAYLIST: 'SET_HOLIDAYLIST',\n  SET_HEADER_TOTAL_ASSIGNED_STAFF: 'SET_HEADER_TOTAL_ASSIGNED_STAFF',\n  SET_HEADER_ASSIGNED_STAFFNAME: 'SET_HEADER_ASSIGNED_STAFFNAME',\n  SET_SHOW_CALENDAR: 'SET_SHOW_CALENDAR',\n  SET_SHOW_TARGET_SETTING: 'SET_SHOW_TARGET_SETTING',\n  SET_HEADER_DATA_LIST: 'SET_HEADER_DATA_LIST',\n  SET_HEADER_STAFF_NAME_ARR: 'SET_HEADER_STAFF_NAME_ARR',\n  SET_SHOW_COLUMN: 'SET_SHOW_COLUMN',\n} as const;\n\nexport const setHolidayList = (payload: any[]) => ({\n  type: types.SET_HOLIDAYLIST,\n  payload,\n});\n\nexport const setHeaderTotalAssignedStaffs = (payload: any[]) => ({\n  type: types.SET_HEADER_TOTAL_ASSIGNED_STAFF,\n  payload,\n});\n\nexport const setHeaderAssignedStaffName = (payload: IShiftBoardManageGetDetailApi[]) => ({\n  type: types.SET_HEADER_ASSIGNED_STAFFNAME,\n  payload,\n});\n\nexport const setIsShowCalendar = (payload: {isShowCalendar: boolean, staffInfoOnCalendar: any}) => ({\n  type: types.SET_SHOW_CALENDAR,\n  payload,\n});\n\nexport const setIsShowTargetSetting = (payload: {isShowTargetSetting: boolean, staffDetailTargetSetting: any}) => ({\n  type: types.SET_SHOW_TARGET_SETTING,\n  payload,\n});\n\nexport const setHeaderDataList = (payload: any) => ({\n  type: types.SET_HEADER_DATA_LIST,\n  payload,\n});\n\nexport const setHeaderStaffNameArr = (payload: any) => ({\n  type: types.SET_HEADER_STAFF_NAME_ARR,\n  payload,\n});\n\nexport const setIsShowColumn = (payload: boolean) => ({\n  type: types.SET_SHOW_COLUMN,\n  payload,\n});\n\nexport type Actions = ReturnType<typeof setHolidayList>\n  | ReturnType<typeof setHeaderTotalAssignedStaffs>\n  | ReturnType<typeof setHeaderAssignedStaffName>\n  | ReturnType<typeof setIsShowCalendar>\n  | ReturnType<typeof setIsShowTargetSetting>\n  | ReturnType<typeof setHeaderDataList>\n  | ReturnType<typeof setHeaderStaffNameArr>\n  | ReturnType<typeof setIsShowColumn>\n","import { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport TodosDispatch from '../edit/context';\nimport { setHeaderAssignedStaffName, setHeaderTotalAssignedStaffs } from '../hook/actions';\nimport { addStaffNameAndCalculateSubtotal, calculateAssignedDaysOfStaffByDateType, calculateTotalAssignedStaffs, checkDateType, checkIsSelectedOtherGroup, setAlertWhenContinuousCheck, setOnOffCheckboxStatus } from './functions';\n\nexport default function CheckboxStatus({\n  data, date, groupId, staffId, staffName,\n}: any) {\n  const [checkBoxStatus, setCheckboxStatus] = React.useState<boolean>(false);\n  const { state: { tableHeaderAssignedStaffname, tableHeaderTotalAssignedStaffs }, dispatch } = useContext(TodosDispatch);\n\n  const handleShowCheckboxColor = (isCheck: boolean) => {\n    if (data?.isAlert) {\n      return '#ff6b6b' // Red Alert\n    } else if (data?.shift_detail_status === 1 && isCheck) {\n      return '#ffbf19' // Yellow warning\n    } else if (isCheck) {\n      return 'green' // Green Selecting \n    } else {\n      return ''\n    }\n  }\n\n  const handleUpdateCheckboxStatus = useCallback((isCheck: boolean) => {\n    console.log(date, groupId, staffId, staffName);\n\n    // Set on/off checbox\n    const newData = setOnOffCheckboxStatus(tableHeaderAssignedStaffname, groupId, staffId, date);\n\n    // Set alert when >= 2 continous checked cells\n    const setAlertData = setAlertWhenContinuousCheck(newData, groupId, staffId);\n\n    // Check Is Selected Other Grp\n    const checkIsSelectedOtherGrp = checkIsSelectedOtherGroup(setAlertData);\n\n    // Add staff name to header & calculate subtotal assigned staffs of each group\n    const addStaffNameToHeader = addStaffNameAndCalculateSubtotal(checkIsSelectedOtherGrp, groupId, staffId, staffName, date, isCheck);\n\n    // Calculate 月内当直数\t(by date type)\n    const assignedDaysOfStaffByDateType = calculateAssignedDaysOfStaffByDateType(tableHeaderAssignedStaffname[0]?.date_info, addStaffNameToHeader);\n\n    // Calculate total assigned staffs\n    const cloneTableHeaderTotalAssignedStaffs = calculateTotalAssignedStaffs(tableHeaderTotalAssignedStaffs, date, isCheck);\n\n    dispatch(setHeaderAssignedStaffName(assignedDaysOfStaffByDateType));\n    dispatch(setHeaderTotalAssignedStaffs(cloneTableHeaderTotalAssignedStaffs));\n  }, [tableHeaderAssignedStaffname]);\n\n  useEffect(() => {\n    setCheckboxStatus(data?.admin_assign_status === 1 ? true : false);\n  }, [data])\n\n  return (\n    <>\n      <Checkbox\n        checked={checkBoxStatus}\n        style={{ color: `${handleShowCheckboxColor(checkBoxStatus)}` }}\n        // style={{ color: `${(data?.shift_detail_status === 1 && checkBoxStatus) ? '#ffbf19' : (checkBoxStatus ? 'green' : '')}` }}\n        onClick={() => {\n          setCheckboxStatus(!checkBoxStatus);\n          handleUpdateCheckboxStatus(!checkBoxStatus);\n        }} />\n    </>\n  );\n}\n","import { Checkbox, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport { setIsShowCalendar, setIsShowTargetSetting } from \"../../hook/actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport CheckboxStatus from \"../CheckboxStatus\";\nimport { Circle } from \"@mui/icons-material\";\nimport TodosDispatch from \"../../edit/context\";\nimport { returnLeftWidth, returnWidthOfDateType } from \"../functions\";\n\nexport default function RowChild({\n  classes,\n  data,\n  index,\n  groupId,\n  staffId,\n  dateType,\n  isShowColumn,\n}: any) {\n  const { dispatch } = useContext(TodosDispatch);\n  const handleShowTableCellColor = (col: any) => {\n    if (col.isAlert) {\n      return '#fce4de' // Red Alert\n    } else if (col.shift_detail_status === 1 && col.admin_assign_status === 1) {\n      return '#fef6e2' // Yellow warning\n    } else if (col.admin_assign_status === 1) {\n      return '#deedd8' // Green Selecting \n    } else if (col.shift_detail_status === 1 || col.isGrey) {\n      return '#efefef' // Grey\n    } else {\n      return ''\n    }\n  }\n\n  return (\n    <>\n      {/* Row Expected Shifts of Staff */}\n      <TableRow className={`${classes.setRowBodyStyle} ${classes.setBorderNone}`}>\n        <TableCell\n          key={`staffAssignment1_${data?.staff_name || ''}_${String(index)}`}\n          align=\"left\"\n          style={{\n            cursor: \"pointer\",\n            paddingLeft: '5px',\n            background: '#fff', position: 'sticky', left: 0, zIndex: 900,\n          }}\n          onClick={() => {\n            dispatch(setIsShowCalendar({\n              isShowCalendar: true,\n              staffInfoOnCalendar: {\n                staffId,\n                staffName: data?.staff_name ?? '',\n                shift_detail: data?.shift_detail ?? [],\n              }\n            }));\n          }}\n        >\n          {data?.staff_name || ''}\n        </TableCell>\n\n        {isShowColumn && (\n          <>\n            <TableCell\n              key={`staffAssignment2_${data?.group_name}2_${String(index)}`}\n              align=\"right\"\n              style={{\n                minWidth: '115px',\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                whiteSpace: 'nowrap',\n                left: '140px',\n              }}\n            >\n              {'年間実績当直数'}\n            </TableCell>\n\n            <TableCell\n              key={`staffAssignment3_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                left: '255px', // 140: 1st columnd width + 115: width of \t年間実績当直数\t\n              }}\n            >\n              {dateType === 0 ? (data?.target_shift_number_weekday + data?.target_shift_number_saturday + data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_weekday || 0)}\n            </TableCell>\n            {\n              dateType > 0 && (\n                <TableCell\n                  key={`staffAssignment4_${data?.group_name}2_${String(index)}`}\n                  align=\"center\"\n                  style={{\n                    borderLeft: 'none',\n                    background: '#fff', position: 'sticky', zIndex: 10,\n                    left: `${255 + returnWidthOfDateType(dateType ?? 0)}px`,\n                  }}\n                >\n                  {dateType === 1 ? (data?.target_shift_number_saturday + data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_saturday || 0)}\n                </TableCell>\n              )\n            }\n            {\n              dateType > 1 && (\n                <TableCell\n                  key={`staffAssignment5_${data?.group_name}2_${String(index)}`}\n                  align=\"center\"\n                  style={{\n                    borderLeft: 'none',\n                    background: '#fff', position: 'sticky', zIndex: 10,\n                    left: `${255 + (returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n                  }}\n                >\n                  {dateType === 2 ? (data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_sunday || 0)}\n                </TableCell>\n              )\n            }\n            {\n              dateType > 2 && (\n                <TableCell\n                  key={`staffAssignment6_${data?.group_name}2_${String(index)}`}\n                  align=\"center\"\n                  style={{\n                    borderLeft: 'none',\n                    background: '#fff', position: 'sticky', zIndex: 10,\n                    left: `${255 + (returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n                  }}\n                >\n                  {data?.target_shift_number_holiday || 0}\n                </TableCell>\n              )\n            }\n          </>\n        )}\n\n        <TableCell\n          key={`staffAssignment2_${data?.group_name}2_${String(index)}`}\n          align=\"right\"\n          style={{\n            minWidth: '90px',\n            borderLeft: 'none',\n            cursor: \"pointer\",\n            background: '#fff', position: 'sticky', zIndex: 10,\n            whiteSpace: 'nowrap',\n            // left: '140px',\n            left: `${isShowColumn\n              ? (140 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1)) // 115: width of \t年間実績当直数\t\n              : '140'}px`,\n          }}\n          onClick={() => {\n            dispatch(setIsShowTargetSetting({\n              isShowTargetSetting: true,\n              staffDetailTargetSetting: {\n                staff_name: data?.staff_name ?? '',\n                shift_assignment_id: data?.shift_assignment_id ?? '',\n                target_shift_number_holiday: data?.target_shift_number_holiday || 0,\n                target_shift_number_saturday: data?.target_shift_number_saturday || 0,\n                target_shift_number_sunday: data?.target_shift_number_sunday || 0,\n                target_shift_number_weekday: data?.target_shift_number_weekday || 0,\n              },\n            }));\n          }}\n        >\n          {'目標当直数'}\n        </TableCell>\n\n        <TableCell\n          key={`staffAssignment3_${data?.group_name}2_${String(index)}`}\n          align=\"center\"\n          style={{\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 10,\n            // left: '230px',\n            left: `${isShowColumn\n              ? (230 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n              : '230'}px`,\n          }}\n        >\n          {dateType === 0 ? (data?.target_shift_number_weekday + data?.target_shift_number_saturday + data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_weekday || 0)}\n        </TableCell>\n        {\n          dateType > 0 && (\n            <TableCell\n              key={`staffAssignment4_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + returnWidthOfDateType(dateType ?? 0)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0))}px`,\n              }}\n            >\n              {dateType === 1 ? (data?.target_shift_number_saturday + data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_saturday || 0)}\n            </TableCell>\n          )\n        }\n        {\n          dateType > 1 && (\n            <TableCell\n              key={`staffAssignment5_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + (returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) * 2 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n              }}\n            >\n              {dateType === 2 ? (data?.target_shift_number_sunday + data?.target_shift_number_holiday) : (data?.target_shift_number_sunday || 0)}\n            </TableCell>\n          )\n        }\n        {\n          dateType > 2 && (\n            <TableCell\n              key={`staffAssignment6_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + (returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) * 3 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n              }}\n            >\n              {data?.target_shift_number_holiday || 0}\n            </TableCell>\n          )\n        }\n\n        <TableCell\n          key={`staffAssignment2_${data?.staff_name || ''}_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n            background: '#fff', position: 'sticky',\n            zIndex: 10,\n            // left: `${returnLeftWidth(dateType ?? 0)}px`,\n            left: `${isShowColumn\n              ? (returnLeftWidth(dateType ?? 0) + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n              : returnLeftWidth(dateType ?? 0)}px`,\n          }}\n        >\n          希望\n        </TableCell>\n\n        {data?.shift_detail?.length > 0 && data?.shift_detail.map((col: any, i: number) => (\n          <TableCell\n            key={`staffAssignment_${col?.number_staff ?? '0'}_${String(index)}_${String(i)}`}\n            align=\"center\"\n          // style={{ background: \"#fff8ea\" }}\n          // style={{ background: \"inherit\" }}\n          >\n            {col?.isSelectedOtherGrp ? '選択中' : (\n              (col?.shift_detail_status === 2) ? (\n                <Circle className={classes.setStyleShiftStatusCircle} />\n              ) : (\n                col?.shift_detail_status === 1 ? (\n                  <CloseIcon className={classes.setStyleShiftStatusClose} />\n                ) : ''\n              )\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n\n      {/* Row Checkbox */}\n      <TableRow className={classes.setRowBodyStyle}>\n        <TableCell\n          key={`staffAssignment3_${data?.staff_name || ''}_${String(index)}`}\n          align=\"left\"\n          style={{\n            background: '#fff', position: 'sticky', left: 0, zIndex: 900, paddingLeft: '5px', color: '#b7bbbf'\n          }}\n        >\n          提出済\n        </TableCell>\n\n        {\n          isShowColumn && (\n            <>\n              <TableCell\n                key={`staffAssignment2_${data?.group_name}2_${String(index)}`}\n                align=\"right\"\n                style={{\n                  borderLeft: 'none',\n                  background: '#fff', position: 'sticky', zIndex: 10,\n                  whiteSpace: 'nowrap',\n                  left: '140px',\n                }}\n              >\n                {'前回実績当直数'}\n              </TableCell>\n\n              <TableCell\n                key={`staffAssignment3_${data?.group_name}2_${String(index)}`}\n                align=\"center\"\n                style={{\n                  borderLeft: 'none',\n                  background: '#fff', position: 'sticky', zIndex: 10,\n                  left: '255px',\n                }}\n              >\n                {dateType === 0 ? (data?.admin_assigned_weekday + data?.admin_assigned_saturday + data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_weekday || 0)}\n              </TableCell>\n              {\n                dateType > 0 && (\n                  <TableCell\n                    key={`staffAssignment4_${data?.group_name}2_${String(index)}`}\n                    align=\"center\"\n                    style={{\n                      borderLeft: 'none',\n                      background: '#fff', position: 'sticky', zIndex: 10,\n                      left: `${255 + returnWidthOfDateType(dateType ?? 0)}px`,\n                    }}\n                  >\n                    {dateType === 1 ? (data?.admin_assigned_saturday + data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_saturday || 0)}\n                  </TableCell>\n                )\n              }\n              {\n                dateType > 1 && (\n                  <TableCell\n                    key={`staffAssignment5_${data?.group_name}2_${String(index)}`}\n                    align=\"center\"\n                    style={{\n                      borderLeft: 'none',\n                      background: '#fff', position: 'sticky', zIndex: 10,\n                      left: `${255 + (returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n                    }}\n                  >\n                    {dateType === 2 ? (data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_sunday || 0)}\n                  </TableCell>\n                )\n              }\n              {\n                dateType > 2 && (\n                  <TableCell\n                    key={`staffAssignment6_${data?.group_name}2_${String(index)}`}\n                    align=\"center\"\n                    style={{\n                      borderLeft: 'none',\n                      background: '#fff', position: 'sticky', zIndex: 10,\n                      left: `${255 + (returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n                    }}\n                  >\n                    {data?.admin_assigned_holiday || 0}\n                  </TableCell>\n                )\n              }\n            </>\n          )\n        }\n\n        <TableCell\n          key={`staffAssignment2_${data?.group_name}2_${String(index)}`}\n          align=\"right\"\n          style={{\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 10,\n            whiteSpace: 'nowrap',\n            // left: '140px',\n            left: `${isShowColumn\n              ? (140 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n              : '140'}px`,\n          }}\n        >\n          {'今回当直数'}\n        </TableCell>\n\n        <TableCell\n          key={`staffAssignment3_${data?.group_name}2_${String(index)}`}\n          align=\"center\"\n          style={{\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 10,\n            // left: '230px',\n            left: `${isShowColumn\n              ? (230 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n              : '230'}px`,\n          }}\n        >\n          {dateType === 0 ? (data?.admin_assigned_weekday + data?.admin_assigned_saturday + data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_weekday || 0)}\n        </TableCell>\n        {\n          dateType > 0 && (\n            <TableCell\n              key={`staffAssignment4_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + returnWidthOfDateType(dateType ?? 0)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0))}px`,\n              }}\n            >\n              {dateType === 1 ? (data?.admin_assigned_saturday + data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_saturday || 0)}\n            </TableCell>\n          )\n        }\n        {\n          dateType > 1 && (\n            <TableCell\n              key={`staffAssignment5_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + (returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) * 2 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0) * 2)}px`,\n              }}\n            >\n              {dateType === 2 ? (data?.admin_assigned_sunday + data?.admin_assigned_holiday) : (data?.admin_assigned_sunday || 0)}\n            </TableCell>\n          )\n        }\n        {\n          dateType > 2 && (\n            <TableCell\n              key={`staffAssignment6_${data?.group_name}2_${String(index)}`}\n              align=\"center\"\n              style={{\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                // left: `${230 + (returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n                left: `${isShowColumn\n                  ? (230 + returnWidthOfDateType(dateType ?? 0) * 3 + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n                  : (230 + returnWidthOfDateType(dateType ?? 0) * 3)}px`,\n              }}\n            >\n              {data?.admin_assigned_holiday || 0}\n            </TableCell>\n          )\n        }\n\n        <TableCell\n          key={`staffAssignment4_${data?.staff_name || ''}_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n            background: '#fff', position: 'sticky',\n            zIndex: 10,\n            // left: `${returnLeftWidth(dateType ?? 0)}px`,\n            left: `${isShowColumn\n              ? (returnLeftWidth(dateType ?? 0) + 115 + returnWidthOfDateType(dateType) * Number(dateType + 1))\n              : returnLeftWidth(dateType ?? 0)}px`,\n          }}\n        >\n          勤務\n        </TableCell>\n\n        {data?.shift_detail?.length > 0 && data?.shift_detail.map((col: any, i: number) => (\n          <TableCell\n            key={`staffAssignmentCheckbox_${col?.number_staff ?? '0'}_${String(index)}_${String(i)}`}\n            align=\"center\"\n            style={{ background: `${handleShowTableCellColor(col)}` }}\n          >\n            <CheckboxStatus data={col} groupId={groupId} staffId={staffId} staffName={data?.staff_name ?? ''} date={col.date_register} />\n          </TableCell>\n        ))}\n      </TableRow>\n    </>\n  );\n}\n","import { Checkbox, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport React from \"react\";\nimport CheckboxStatus from \"./CheckboxStatus\";\nimport { returnLeftWidth, returnWidthOfDateType, showDateTypeColumn } from \"./functions\";\nimport RowChild from \"./rowChild\";\n\nexport default function DataTableBody({\n  classes,\n  data,\n  index,\n  isShowColumn,\n}: any) {\n  return (\n    <>\n      {/* Blank Row */}\n      <TableRow className={`${classes.setRowBodyStyle} ${classes.setBorderNone}`} style={{ height: '20px' }}>\n        <TableCell\n          key={`bodyCell_BlankRowHeader1_${String(index)}`}\n          // colSpan={Number(showDateTypeColumn(data?.display_type ?? 0) + 2)}\n          colSpan={isShowColumn ? Number(showDateTypeColumn(data?.display_type ?? 0) * 2 + 3) : Number(showDateTypeColumn(data?.display_type ?? 0) + 2)}\n          style={{ background: '#fff', position: 'sticky', left: 0, }}\n        >\n          {\" \"}\n        </TableCell>\n\n        <TableCell\n          key={`bodyCell_BlankRowHeader4_${String(index)}`}\n          style={{\n            background: '#fff', position: 'sticky',\n            // left: `${returnLeftWidth(data?.display_type ?? 0)}px`,\n            left: `${isShowColumn ? (returnLeftWidth(data?.display_type ?? 0) + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1)) : returnLeftWidth(data?.display_type ?? 0)}px`,\n            borderLeft: 'none', borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n          }}\n        >\n          {\" \"}\n        </TableCell>\n\n        {data?.date_info?.length > 0 && data?.date_info.map((col: any, i: number) => (\n          <TableCell\n            key={`bodyCell_BlankRow_${String(index)}_${String(i)}`}\n            align=\"center\"\n            style={{ background: \"inherit\" }}\n          >\n            {' '}\n          </TableCell>\n        ))}\n      </TableRow>\n      {/* Blank Row */}\n\n      {/* Render Subtotal of Each Group */}\n      <TableRow className={`${classes.setRowBodyStyle} ${classes.setBorderNone}`}>\n        <TableCell\n          key={`bodyCellRequiredStaffs_${data?.group_name}1_${String(index)}`}\n          align=\"left\"\n          style={{\n            paddingLeft: '5px',\n            color: '#27a8e0',\n            position: 'sticky',\n            left: 0,\n            background: '#fff',\n            zIndex: 100,\n            minWidth: '140px', //140: 1st column width\n          }}\n        >\n          {data?.group_name || ''}\n        </TableCell>\n\n        {isShowColumn && (\n          <>\n            <TableCell\n              key={`bodyCellRequiredStaffs_${data?.group_name}2_${String(index)}`}\n              align=\"right\"\n              style={{\n                paddingRight: '5px',\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 900,\n                left: '140px', //140: 1st column width\n              }}\n            >\n              {' '}\n            </TableCell>\n            <TableCell\n              key={`bodyCellRequiredStaffs_${data?.group_name}3_${String(index)}`}\n              align=\"right\"\n              colSpan={showDateTypeColumn(data?.display_type ?? 0)}\n              style={{\n                paddingRight: '5px',\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 900,\n                left: '255px', // 140: 1st width column + 115: width of \t年間実績当直数\t\n              }}\n            >\n              {' '}\n            </TableCell>\n          </>\n        )}\n\n        <TableCell\n          key={`bodyCellRequiredStaffs_${data?.group_name}2_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 900,\n            // left: '140px',\n            left: `${isShowColumn\n              ? (140 + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : '140'}px`,\n          }}\n        >\n          {' '}\n        </TableCell>\n        <TableCell\n          key={`bodyCellRequiredStaffs_${data?.group_name}3_${String(index)}`}\n          align=\"right\"\n          colSpan={showDateTypeColumn(data?.display_type ?? 0)}\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 900,\n            // left: '230px',\n            left: `${isShowColumn\n              ? (230 + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : '230'}px`,\n          }}\n        >\n          {' '}\n        </TableCell>\n\n        <TableCell\n          key={`bodyCellRequiredStaffs_${data?.group_name}4_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            borderRight: '1px solid rgba(196, 196, 196, 0.4)', background: '#fff',\n            position: 'sticky',\n            zIndex: 10,\n            // left: `${returnLeftWidth(data?.display_type ?? 0)}px`,\n            left: `${isShowColumn\n              ? (returnLeftWidth(data?.display_type ?? 0) + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : returnLeftWidth(data?.display_type ?? 0)}px`,\n          }}\n        >\n          必要人数\n        </TableCell>\n\n        {data?.date_info?.length > 0 && data?.date_info.map((col: any, i: number) => (\n          <TableCell\n            key={`bodyCellRequiredStaffs_${col?.number_staff}_${String(index)}_${String(i)}`}\n            align=\"center\"\n            style={{ background: \"inherit\" }}\n          // style={{ background: \"#FFF8EA\", border: \"1px solid #fff\" }}\n          >\n            {col?.number_staff ?? '0'}\n          </TableCell>\n        ))}\n      </TableRow>\n\n      <TableRow className={`${classes.setRowBodyStyle}`}>\n        <TableCell\n          key={`bodyCellAssignedStaff_${data?.group_name}1_${String(index)}`}\n          align=\"right\"\n          style={{\n            background: '#fff',\n            position: 'sticky',\n            left: 0,\n            zIndex: 10,\n          }}\n        >\n          {\" \"}\n        </TableCell>\n\n        {isShowColumn && (\n          <>\n            <TableCell\n              key={`bodyCellAssignedStaff_${data?.group_name}2_${String(index)}`}\n              align=\"right\"\n              style={{\n                paddingRight: '5px',\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                left: '140px',\n              }}\n            >\n              {' '}\n            </TableCell>\n            <TableCell\n              key={`bodyCellAssignedStaff_${data?.group_name}3_${String(index)}`}\n              align=\"right\"\n              colSpan={showDateTypeColumn(data?.display_type ?? 0)}\n              style={{\n                paddingRight: '5px',\n                borderLeft: 'none',\n                background: '#fff', position: 'sticky', zIndex: 10,\n                left: '255px',\n              }}\n            >\n              {' '}\n            </TableCell>\n          </>\n        )}\n\n        <TableCell\n          key={`bodyCellAssignedStaff_${data?.group_name}2_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 10,\n            // left: '140px',\n            left: `${isShowColumn\n              ? (140 + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : '140'}px`,\n          }}\n        >\n          {' '}\n        </TableCell>\n        <TableCell\n          key={`bodyCellAssignedStaff_${data?.group_name}3_${String(index)}`}\n          align=\"right\"\n          colSpan={showDateTypeColumn(data?.display_type ?? 0)}\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            background: '#fff', position: 'sticky', zIndex: 10,\n            // left: '230px',\n            left: `${isShowColumn\n              ? (230 + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : '230'}px`,\n          }}\n        >\n          {' '}\n        </TableCell>\n\n        <TableCell\n          key={`bodyCellAssignedStaff_${data?.group_name}4_${String(index)}`}\n          align=\"right\"\n          style={{\n            paddingRight: '5px',\n            borderLeft: 'none',\n            borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n            background: '#fff', position: 'sticky',\n            zIndex: 10,\n            // left: `${returnLeftWidth(data?.display_type ?? 0)}px`,\n            left: `${isShowColumn\n              ? (returnLeftWidth(data?.display_type ?? 0) + 115 + returnWidthOfDateType(data?.display_type) * Number(data?.display_type + 1))\n              : returnLeftWidth(data?.display_type ?? 0)}px`,\n          }}\n        >\n          配置人数\n        </TableCell>\n\n        {data?.date_info?.length > 0 && data?.date_info.map((col: any, i: number) => (\n          <TableCell key={`bodyCellAssignedStaff_${col?.assigned_staffs}_${String(index)}_${String(i)}`} align=\"center\" style={{ width: '100px' }}>\n            {col?.assigned_staffs ?? '0'}\n          </TableCell>\n        ))}\n      </TableRow>\n\n      {/* Render Staff List Assignment */}\n      {data?.list_staff_detail?.length > 0 && data?.list_staff_detail?.map((col: any, i: number) => (\n        <RowChild key={`table_body_staff_detail_${String(i)}`} data={col} groupId={data.group_id} staffId={col.staff_id} classes={classes} index={i} dateType={data?.display_type} isShowColumn={isShowColumn} />\n      ))}\n\n      {/* Blank Row */}\n      {/* <TableRow className={`${classes.setRowBodyStyle} ${classes.setBorderNone}`}>\n        <TableCell\n          key={`bodyCell_BlankRowFooter_${String(index)}`}\n        >\n          {\" \"}\n        </TableCell>\n      </TableRow> */}\n    </>\n  );\n}\n","import { Grid, TableCell, TableHead, TableRow, Tooltip, Typography, Zoom } from '@mui/material';\nimport moment from 'moment';\nimport { returnLeftWidth, returnWidthOfDateType, showDateTypeColumn } from './functions';\nimport { DataTableHeadProps } from './interface';\n\nexport default function DataTableHeadCalendar({\n  classes, tableHeaderListDate = [], data = [], tableHeaderTotalAssignedStaffs = [], isShowColumn,\n}: DataTableHeadProps) {\n\n  return (\n    <TableHead className={classes.cssHeaderBorder}>\n      {/* Assigned Staff Names - 当直者 */}\n      {data?.length > 0 && (\n        data?.map((item: any, index: number) => (\n          <TableRow key={`assignedStaffName_tableRow_${String(index)}`} className={`${classes.setHeaderPosition} ${index === 0 && classes.setBorderTopColor} ${classes.setBorderLeftAndRightColor} ${index === 0 && classes.setBorderTopRight}`}>\n            <TableCell\n              key={`assignedStaffName_title_${String(index)}`}\n              align='left'\n              colSpan={isShowColumn ? Number(showDateTypeColumn(item?.display_type ?? 0) * 2 + 3) : Number(showDateTypeColumn(item?.display_type ?? 0) + 2)}\n              style={{\n                color: '#27a8e0',\n                fontSize: '16px',\n                background: '#fff', zIndex: 999,\n                borderTopLeftRadius: `${index === 0 && '5px'}`,\n                borderBottom: `${index !== (data.length - 1) && 'none'}`\n              }}\n            >\n              {index === 0 ? '当直者' : ' '}\n            </TableCell>\n\n            <TableCell\n              key={`assignedStaffName_group_name_${String(index)}`}\n              align='right'\n              style={{\n                borderLeft: 'none',\n                whiteSpace: 'nowrap',\n                borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n                background: '#fff',\n                zIndex: 999,\n                position: 'sticky',\n                // left: `${returnLeftWidth(item?.display_type ?? 0)}px`,\n                left: `${isShowColumn\n                  ? (returnLeftWidth(item?.display_type ?? 0) + 115 + returnWidthOfDateType(item?.display_type) * Number(item?.display_type + 1)) // 115: width of \t年間実績当直数\t\n                  : returnLeftWidth(item?.display_type ?? 0)}px`,\n                borderBottom: `${index !== (data.length - 1) && 'none'}`\n              }}\n            >\n              {item?.group_name ?? ''}\n            </TableCell>\n\n            {item?.date_info.map((value: any, i: number) => (\n              <TableCell\n                key={`assignedStaffName_${String(i)}`}\n                style={{\n                  minWidth: '100px',\n                  borderTop: `${index === 0 && '1px solid #27a8e0'}`,\n                  borderBottom: `${index !== (data.length - 1) && 'none'}`\n                }}\n              >\n                {value?.assigned_staffs > value?.number_staff ? (\n                  <Typography\n                    style={{ textAlign: \"left\", fontSize: '14px' }}\n                  >\n                    人数オーバー\n                  </Typography>\n                ) : (\n                  <Tooltip\n                    title={value?.assigned_staff_name?.length > 0 && value?.assigned_staff_name?.map((item: any) => item?.staff_name ?? '')?.join(', ')}\n                    arrow={true}\n                    TransitionComponent={Zoom}\n                    placement=\"top\"\n                    classes={{ tooltip: classes.paddingTooltip }}\n                  >\n                    <Typography\n                      className={classes.tableEllipsis}\n                      style={{ textAlign: \"left\", fontSize: '14px' }}\n                    >\n                      {value?.assigned_staff_name?.length > 0 && value?.assigned_staff_name?.map((item: any) => item?.staff_name ?? '')?.join(', ')}\n                    </Typography>\n                  </Tooltip>\n                )}\n              </TableCell>\n            ))}\n          </TableRow>\n        ))\n      )}\n\n      {/* Total Assigned Staffs - 合計 */}\n      {tableHeaderTotalAssignedStaffs?.length > 0 && (\n        <TableRow key={`totalAssignedStaff_requiredStaff_1`} className={`${classes.setHeaderPosition} ${classes.setBorderLeftAndRightColor}`}>\n          <TableCell\n            key={`totalAssignedStaff_title1_1`}\n            align='left'\n            colSpan={isShowColumn ? Number(showDateTypeColumn(data[0]?.display_type ?? 0) * 2 + 3) : Number(showDateTypeColumn(data[0]?.display_type ?? 0) + 2)}\n            style={{\n              color: '#27a8e0',\n              fontSize: '16px',\n              borderBottom: 'none'\n            }}>\n            合計\n          </TableCell>\n\n          <TableCell\n            key={`totalAssignedStaff_title2_1`}\n            align='right'\n            style={{\n              borderLeft: 'none',\n              borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n              background: '#fff', zIndex: 999,\n              position: 'sticky',\n              // left: `${returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n              left: `${isShowColumn\n                ? (returnLeftWidth(data[0]?.display_type ?? 0) + 115 + returnWidthOfDateType(data[0]?.display_type) * Number(data[0]?.display_type + 1))\n                : returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n              borderBottom: 'none',\n              whiteSpace: 'nowrap',\n            }}>\n            必要人数\n          </TableCell>\n\n          {tableHeaderTotalAssignedStaffs.map((value: any, i: number) => (\n            <TableCell\n              key={`totalAssignedStaff_number_staff_${String(i)}`}\n              align='center'\n              style={{\n                borderBottom: 'none',\n              }}>{value?.number_staff}</TableCell>\n          ))}\n        </TableRow>\n      )}\n      {tableHeaderTotalAssignedStaffs?.length > 0 && (\n        <TableRow key={`totalAssignedStaff_tableRow_2`} className={`${classes.setHeaderPosition} ${classes.setBorderLeftAndRightColor}`}>\n          <TableCell\n            key={`totalAssignedStaff_title1_1`}\n            align='left'\n            colSpan={isShowColumn ? Number(showDateTypeColumn(data[0]?.display_type ?? 0) * 2 + 3) : Number(showDateTypeColumn(data[0]?.display_type ?? 0) + 2)}\n          >\n            {' '}\n          </TableCell>\n\n          <TableCell\n            key={`totalAssignedStaff_title2_1`}\n            align='right'\n            style={{\n              borderLeft: 'none',\n              borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n              background: '#fff', zIndex: 999,\n              position: 'sticky',\n              // left: `${returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n              left: `${isShowColumn\n                ? (returnLeftWidth(data[0]?.display_type ?? 0) + 115 + returnWidthOfDateType(data[0]?.display_type) * Number(data[0]?.display_type + 1))\n                : returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n            }}>\n            配置人数\n          </TableCell>\n\n          {tableHeaderTotalAssignedStaffs.map((value: any, i: number) => (\n            <TableCell\n              key={`totalAssignedStaff_number_staff_${String(i)}`}\n              align='center'\n              style={{\n                borderBottom: 'none',\n              }}>{value?.assigned_staffs}</TableCell>\n          ))}\n        </TableRow>\n      )}\n\n      {/* Blank Row */}\n      {/* <TableRow className={`${classes.stickyTableCell}`} style={{ height: '20px', background: '#fff' }}>\n        <TableCell style={{ height: '20px' }}>{' '}</TableCell>\n      </TableRow> */}\n\n      {/* Render date & type*/}\n      <TableRow key={`header_date_type_title_tableRow1`} className={`${classes.rowOnHead} ${classes.setHeaderPosition} ${classes.setBorderLeftAndRightColor}`}>\n        {tableHeaderListDate?.length > 0 && (\n          <>\n            <TableCell\n              key={`header_date_type_title`}\n              align='center'\n              style={{\n                color: '#000',\n                borderBottom: 'none',\n                background: '#fff',\n                borderLeft: '1px solid #27a8e0',\n                zIndex: 999,\n                position: 'sticky',\n                left: 0,\n              }}\n              colSpan={isShowColumn ? Number(showDateTypeColumn(data[0]?.display_type ?? 0) * 2 + 3) : Number(showDateTypeColumn(data[0]?.display_type ?? 0) + 2)}\n              width='100px'\n            >\n              {' '}\n            </TableCell>\n\n            <TableCell\n              key={`totalAssignedStaff_blankRow_3`}\n              align='left'\n              colSpan={showDateTypeColumn(data[0]?.date_type ?? 0)}\n              style={{\n                background: '#fff',\n                borderLeft: 'none',\n                borderBottom: 'none',\n                borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n                position: 'sticky',\n                zIndex: 999,\n                // left: `${returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n                left: `${isShowColumn\n                  ? (returnLeftWidth(data[0]?.display_type ?? 0) + 115 + returnWidthOfDateType(data[0]?.display_type) * Number(data[0]?.display_type + 1))\n                  : returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n              }}\n            >\n              {' '}\n            </TableCell>\n          </>\n        )}\n\n        {tableHeaderListDate?.length > 0 && tableHeaderListDate?.map((col: any, i: number) => (\n          <TableCell\n            key={`header_date_type_title_${String(i)}`}\n            align={col.alignCenterTitle ? 'center' : col.align}\n            className={classes.tableTh}\n            width={col.width ?? 'auto'}\n          >\n            {moment(col?.date ?? '').format('MM/DD')}\n          </TableCell>\n        ))}\n      </TableRow>\n\n      <TableRow key={`header_date_type_title_tableRow2`} className={`${classes.rowOnHead} ${classes.setHeaderPosition} ${classes.setBorderBottomColor} ${classes.setBorderLeftAndRightColor}`}>\n        {tableHeaderListDate?.length > 0 && (\n          <>\n            <TableCell\n              key={`header_date_type_title`}\n              align='center'\n              colSpan={2}\n              style={{ backgroundColor: '#fff', color: '#000', position: 'sticky', left: 0, }}\n            >\n              {' '}\n            </TableCell>\n            {/* <TableCell\n              key={`header_date_type_title_dateType1`}\n              align='center'\n              style={{\n                background: '#fff', zIndex: 999,\n                borderLeft: 'none',\n                color: '#000', position: 'sticky',\n              }}\n            >\n              {' '}\n            </TableCell> */}\n\n            {/* Render Weekday type */}\n            {isShowColumn && (\n              <>\n                <TableCell\n                  key={`header_date_type_title_dateType2`}\n                  align='center'\n                  style={{\n                    background: '#fff', zIndex: 999,\n                    borderLeft: 'none',\n                    color: '#000',\n                    whiteSpace: 'nowrap',\n                    position: 'sticky',\n                    minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                    left: '255px', // 255 width = (140: 1st column width + 115: width of \t年間実績当直数\t)\n                  }}\n                >\n                  {data[0]?.display_type === 0 ? '平土日祝' : '平'}\n                </TableCell>\n                {\n                  data[0]?.display_type > 0 && (\n                    <TableCell\n                      key={`header_date_type_title_dateType3`}\n                      align='center'\n                      style={{\n                        background: '#fff', zIndex: 999,\n                        borderLeft: 'none',\n                        color: '#000',\n                        whiteSpace: 'nowrap',\n                        minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                        left: `${255 + returnWidthOfDateType(data[0]?.display_type)}px`,\n                      }}\n                    >\n                      {data[0]?.display_type === 1 ? '土日祝' : '土'}\n                    </TableCell>\n                  )\n                }\n                {\n                  data[0]?.display_type > 1 && (\n                    <TableCell\n                      key={`header_date_type_title_dateType4`}\n                      align='center'\n                      style={{\n                        background: '#fff', zIndex: 999,\n                        borderLeft: 'none',\n                        color: '#000',\n                        whiteSpace: 'nowrap',\n                        minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                        left: `${255 + (returnWidthOfDateType(data[0]?.display_type) * 2)}px`,\n                      }}\n                    >\n                      {data[0]?.display_type === 2 ? '日祝' : '日'}\n                    </TableCell>\n                  )\n                }\n                {\n                  data[0]?.display_type > 2 && (\n                    <TableCell\n                      key={`header_date_type_title_dateType5`}\n                      align='center'\n                      style={{\n                        background: '#fff', zIndex: 999,\n                        borderLeft: 'none',\n                        color: '#000',\n                        minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                        left: `${255 + (returnWidthOfDateType(data[0]?.display_type) * 3)}px`,\n                      }}\n                    >\n                      {'祝'}\n                    </TableCell>\n                  )\n                }\n                <TableCell\n                  key={`header_date_type_title_dateType1`}\n                  align='center'\n                  style={{\n                    background: '#fff', zIndex: 999,\n                    borderLeft: 'none',\n                    color: '#000', position: 'sticky',\n                    left: `${255 + (returnWidthOfDateType(data[0]?.display_type) * Number(data[0]?.display_type + 1))}px`,\n                  }}\n                >\n                  {' '}\n                </TableCell>\n\n                {/* Render Weekday type */}\n              </>\n            )}\n\n            <TableCell\n              key={`header_date_type_title_dateType2`}\n              align='center'\n              style={{\n                background: '#fff', zIndex: 999,\n                borderLeft: 'none',\n                color: '#000',\n                whiteSpace: 'nowrap',\n                position: 'sticky',\n                minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                left: `${isShowColumn ?\n                  (230 + (returnWidthOfDateType(data[0]?.display_type) * (data[0]?.display_type + 1)) + 115)\n                  : 230}px`, // 230 width = (140: 1st column width + 90: 2nd column width)\n              }}\n            >\n              {data[0]?.display_type === 0 ? '平土日祝' : '平'}\n            </TableCell>\n            {\n              data[0]?.display_type > 0 && (\n                <TableCell\n                  key={`header_date_type_title_dateType3`}\n                  align='center'\n                  style={{\n                    background: '#fff', zIndex: 999,\n                    borderLeft: 'none',\n                    color: '#000',\n                    whiteSpace: 'nowrap',\n                    minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                    // left: `${230 + returnWidthOfDateType(data[0]?.display_type)}px`,\n                    left: `${isShowColumn ?\n                      (230 + (returnWidthOfDateType(data[0]?.display_type) * (data[0]?.display_type + 1)) + (115 + returnWidthOfDateType(data[0]?.display_type)))\n                      : (230 + returnWidthOfDateType(data[0]?.display_type))}px`,\n                  }}\n                >\n                  {data[0]?.display_type === 1 ? '土日祝' : '土'}\n                </TableCell>\n              )\n            }\n            {\n              data[0]?.display_type > 1 && (\n                <TableCell\n                  key={`header_date_type_title_dateType4`}\n                  align='center'\n                  style={{\n                    background: '#fff', zIndex: 999,\n                    borderLeft: 'none',\n                    color: '#000',\n                    whiteSpace: 'nowrap',\n                    minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                    // left: `${230 + (returnWidthOfDateType(data[0]?.display_type) * 2)}px`,\n                    left: `${isShowColumn ?\n                      (230 + (returnWidthOfDateType(data[0]?.display_type) * (data[0]?.display_type + 1)) + (115 + returnWidthOfDateType(data[0]?.display_type) * 2))\n                      : (230 + (returnWidthOfDateType(data[0]?.display_type) * 2))}px`,\n                  }}\n                >\n                  {data[0]?.display_type === 2 ? '日祝' : '日'}\n                </TableCell>\n              )\n            }\n            {\n              data[0]?.display_type > 2 && (\n                <TableCell\n                  key={`header_date_type_title_dateType5`}\n                  align='center'\n                  style={{\n                    background: '#fff', zIndex: 999,\n                    borderLeft: 'none',\n                    color: '#000',\n                    minWidth: `${returnWidthOfDateType(data[0]?.display_type)}px`,\n                    // left: `${230 + (returnWidthOfDateType(data[0]?.display_type) * 3)}px`,\n                    left: `${isShowColumn ?\n                      (230 + (returnWidthOfDateType(data[0]?.display_type) * (data[0]?.display_type + 1)) + (115 + returnWidthOfDateType(data[0]?.display_type) * 3))\n                      : (230 + (returnWidthOfDateType(data[0]?.display_type) * 3))}px`,\n                  }}\n                >\n                  {'祝'}\n                </TableCell>\n              )\n            }\n            {/* Render Weekday type */}\n\n\n            <TableCell\n              key={`header_date_type_title_dateType6`}\n              align='center'\n              style={{\n                background: '#fff', zIndex: 999,\n                borderLeft: 'none',\n                color: '#000',\n                borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n                position: 'sticky',\n                // left: `${returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n                left: `${isShowColumn\n                  ? (returnLeftWidth(data[0]?.display_type ?? 0) + 115 + returnWidthOfDateType(data[0]?.display_type) * Number(data[0]?.display_type + 1))\n                  : returnLeftWidth(data[0]?.display_type ?? 0)}px`,\n              }}\n            >\n              {' '}\n            </TableCell>\n          </>\n        )}\n\n        {tableHeaderListDate?.length > 0 && tableHeaderListDate?.map((col: any, i: number) => (\n          <TableCell\n            key={`header_date_type_title_${String(i)}`}\n            align={col.alignCenterTitle ? 'center' : col.align}\n            className={classes.tableTh}\n            width={col.width ?? 'auto'}\n            style={{ backgroundColor: `${(col?.label !== '祝' && col?.label !== '日' && col?.label !== '土') ? '#fff' : ((col?.label !== '祝' && col?.label !== '日') ? '#A8D08D' : '#f4c7c3')}`, color: '#000' }}\n          >\n            {col.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import { IAdminSettingInitState } from './type';\nimport { Actions, types } from './actions';\n\nconst reducer = (state: IAdminSettingInitState, action: Actions): IAdminSettingInitState => {\n  switch (action.type) {\n    case types.SET_HOLIDAYLIST:\n      return {... state, holidayListData: action.payload};\n              \n      case types.SET_HEADER_ASSIGNED_STAFFNAME:\n      return {... state, tableHeaderAssignedStaffname: action.payload};\n        \n      case types.SET_HEADER_TOTAL_ASSIGNED_STAFF:\n      return {... state, tableHeaderTotalAssignedStaffs: action.payload};\n\n      case types.SET_SHOW_CALENDAR:\n        return {\n          ...state, \n          isShowCalendar: action.payload.isShowCalendar,\n          staffInfoOnCalendar: action.payload.staffInfoOnCalendar,\n        };\n\n      case types.SET_SHOW_TARGET_SETTING:\n        return {\n          ...state, \n          isShowTargetSetting: action.payload.isShowTargetSetting,\n          staffDetailTargetSetting: action.payload.staffDetailTargetSetting,\n        };\n\n      case types.SET_HEADER_STAFF_NAME_ARR:\n        return {...state, tableHeaderStaffNameArr: action.payload};\n\n      case types.SET_HEADER_DATA_LIST:\n        return {...state, \n          tableHeaderAssignedStaffname: action.payload.formatedTableAssignedStaffName,\n          tableHeaderTotalAssignedStaffs: action.payload.formatedTableHeaderTotalAssignedStaffs,\n          tableHeaderListDate: action.payload.formatedTableHeaderlist,\n        };\n\n      case types.SET_SHOW_COLUMN:\n        return {...state, \n          isShowColumn: action.payload,\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import moment from 'moment';\nimport { useEffect, useReducer } from 'react';\nimport reducer from './reducer';\nimport { IAdminSettingInitState } from './type';\n\nconst useShiftBoardManagement = () => {\n  const initialState: IAdminSettingInitState = {\n    calendarData: {\n      loadingCalendar: false,\n      errorCalendar: \"\",\n      desiredTime: null,\n      filterPublicDays: [],\n      filterSelectedCallDays: [],\n      filterSelectedDays: [],\n      weekdayStart: 0,\n      weekdayEnd: 0,\n      weekendStart: 0,\n      weekendEnd: 0,\n      holidayStart: 0,\n      holidayEnd: 0,\n      publicHoliday: true,\n      publicHolidayList: [],\n      showTime: false,\n      possibleMonthCode: null,\n      possibleDayCode: null,\n      monthSynchronized: moment().format(\"MM\"),\n      yearSynchronized: moment().format(\"YYYY\"),\n      daySynchronized: moment().format(\"DD\"),\n      regularHolidayFriday: false,\n      regularHolidayMonday: false,\n      regularHolidaySaturday: false,\n      regularHolidaySunday: false,\n      regularHolidayThursday: false,\n      regularHolidayTuesday: false,\n      regularHolidayWednesday: false,\n      privateHolidays: [],\n      isRedirect: false,\n      currentDaySynchronized: moment().format(\"YYYY-MM-DD\"),\n    },\n    holidayListData: [], //Admin holiday setting\n    tableHeaderListDate: [],\n    tableHeaderTotalAssignedStaffs: [],\n    tableHeaderAssignedStaffname: [],\n    tableHeaderStaffNameArr: [],\n    isShowCalendar: false,\n    isShowTargetSetting: false,\n    isShowColumn: false,\n    staffDetailTargetSetting: {},\n    staffInfoOnCalendar: {},\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return { state, dispatch };\n};\n\nexport default useShiftBoardManagement;\n","import { Theme } from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\n\nconst useTableStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: '100%',\n  },\n  table: {\n    tableLayout: 'fixed',\n    overflowX: 'scroll',\n    minWidth: '100%',\n    scrollBehavior: 'smooth',\n    '&::-webkit-scrollbar': {\n      height: '8px',\n      width: '8px',\n      background: '#E5E5E5',\n      borderRadius: '10px',\n      marginTop: '10px',\n      marginBottom: '10px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      background: '#606060',\n      borderRadius: '10px',\n      height: '8px',\n      width: '8px',\n    },\n    '& th': {\n      padding: '4px 10px 4px 10px',\n    },\n    '& td': {\n      padding: '4px 10px 4px 10px',\n    },\n  },\n  setHeaderPosition: {\n    width: '100%',\n    background: '#fff',\n    zIndex: 999,\n    '& th': {\n      padding: '5px',\n      background: '#fff',\n    },\n    '& th:first-child': {\n      left: 0,\n      position: 'sticky',\n      zIndex: 999,\n    },\n    '& td:first-child': {\n      left: 0,\n      position: 'sticky',\n    },\n  },\n  setBorderTopColor: {\n    '& th': {\n      borderTop: '1px solid #27a8e0',\n    }\n  },\n  setBorderBottomColor: {\n    '& th': {\n      borderBottom: '1px solid #27a8e0',\n    }\n  },\n  setBorderLeftAndRightColor: {\n    '& th': {\n      '&:not(:first-child)': {\n        borderLeft: '1px solid rgba(196, 196, 196, 0.3)',\n      },\n    },\n    '& th:first-child': {\n      borderLeft: '1px solid #27a8e0',\n    },\n    '& th:last-child': {\n      borderRight: '1px solid #27a8e0',\n    },\n  },\n  cssHeaderRow: {\n    // width: '100%',\n    // background: '#fff',\n    // zIndex: 999,\n    // '& th': {\n    //   padding: '5px',\n    //   background: '#fff',\n    // },\n  },\n  setStyleShiftStatusClose: {\n    display: 'block !important', \n    margin: 'auto', \n  },\n  setStyleShiftStatusCircle: {\n    display: 'block !important', \n    margin: 'auto', \n    border: '2px solid #000', \n    borderRadius: '100%', \n    color: '#fff',\n    width: '18px !important',\n    height: '18px !important',\n  },\n  tableEllipsis: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    maxWidth: '100px',\n    tableLayout: 'fixed',\n    textAlign: 'left',\n  },\n  paddingTooltip: {\n    color: '#fff',\n    padding: '8px',\n    fontSize: '1rem !important',\n    maxWidth: '300px',\n    wordWrap: 'break-word',\n    fontFamily: 'Roboto,Helvetica,Arial,sans-serif',\n    fontWeight: 500,\n    letterSpacing: '1px',\n    lineHeight: '1.4em',\n    borderTadius: '4px',\n    backgroundColor: 'rgba(96, 96, 96, 0.9)',\n  },\n  rowOnHead: {\n    '& th': {\n      background: theme.palette.primary.light, // set background date\n      color: '#fff',\n      padding: '0',\n      minWidth: '40px'\n    },\n  },\n  setRowBodyStyle: {\n    height: '40px',\n    '& td': {\n      padding: '0',\n      '&:not(:first-child)': {\n        borderLeft: '1px solid rgba(196, 196, 196, 0.3)',\n      },\n    },\n  },\n  setBorderNone: {\n    '& td': {\n      border: \"none\",\n    },\n  },\n  setBorderRight: {\n    borderRight: '1px solid rgba(196, 196, 196, 0.4)',\n  },\n  tableTh: {\n    background: 'inherit',\n  },\n  cssSaveButton: {\n    width: '300px', \n    '&:disabled': {\n      backgroundColor: '#e0e0e0',\n      color: '#a7a7a7',\n    },\n  },\n  cssSaveButtonSmallSize: {\n    width: '100px', \n  },\n  cssFooter: {\n    marginTop: '2rem',\n    display:'flex',\n    justifyContent:'center',\n  },\n  cssHeaderBorder: {\n    // width: '100%',\n    background: 'inherit',\n    left: 0,\n    top: 0,\n    position: 'sticky',\n    zIndex: 999,\n  },\n  stickyTableCell: {\n    '& th:first-child': {\n      left: 0,\n      position: 'sticky',\n      zIndex: 999,\n      border: 'none',\n    },\n    '& td:first-child': {\n      left: 0,\n      position: 'sticky',\n    },\n  },\n  stickyTableFull: {\n    maxHeight: '1600px',\n    '& th': {\n      fontSize: '16px',\n    },\n    '& td': {\n      fontSize: '16px',\n    },\n  },\n  setBorderTopRight: {\n    '& th:last-child': {\n      borderTopRightRadius: '5px',\n    },\n  },\n  tableContainerRadiusTop: {\n    borderTopLeftRadius: '5px',\n    borderTopRightRadius: '5px',\n  },\n  cssPopup2: {\n    display: \"flex\", alignItems: 'center', justifyContent: \"flex-start\", flexDirection: 'column', width: '700px', height: '300px'\n  },\n  cssPopup2Checkbox: {\n    display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '1rem 0',\n  },\n  cssAddRemoveColumnBtn: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  }\n}));\nexport default useTableStyles;\n","import {\n  Box,\n  Checkbox,\n  Dialog,\n  DialogContent,\n  FormControl,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  Zoom,\n} from \"@mui/material\";\nimport clsx from \"clsx\";\nimport { isArray } from \"lodash\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport moment from \"moment\";\nimport * as yup from \"yup\";\nimport { useSnackbar } from \"notistack\";\nimport { stringify } from \"querystring\";\nimport React, { createContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { adminSaveDraftOrPublishShiftAssignmentApi, adminUpdateStaffDetailTargetSetting, getDetailShiftBoardMangementApi } from \"../../../../api/adminApi\";\nimport PillButton from \"../../../../components/atoms/Buttons/PillButton\";\nimport CustomCalendar from \"../../../../components/organisms/Calendar\";\nimport ScreenLoader from \"../../../../components/organisms/ScreenLoader\";\nimport useQuery from \"../../../../hooks/useQuery\";\nimport DataTableBody from \"../components/DataTableBody\";\nimport DataTableHeadCalendar from \"../components/DataTableHead\";\nimport { calculateAssignedDaysOfStaffByDateType, calculateTotalAssignedStaffWithCheckBox, formatListTotalAssignedStaffs, formatTableAssignedStaffName, formatTableHederListDate, handleFormatDataWithCheckbox } from \"../components/functions\";\nimport { setHeaderAssignedStaffName, setHeaderDataList, setIsShowCalendar, setIsShowColumn, setIsShowTargetSetting } from \"../hook/actions\";\nimport useShiftBoardManagement from \"../hook/hook\";\nimport TodosDispatch from \"./context\";\nimport useTableStyles from \"./styles\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { USING_TEXT_LIST } from \"../../../../utility/usingTexts\";\nimport { IShiftBoardManageGetDetailApi } from \"./type\";\n\nconst ShiftBoardManagementEdit: React.FC = () => {\n  const classes = useTableStyles();\n  const history = useHistory();\n  const {\n    location: { pathname },\n  } = history;\n\n  const { state, dispatch } = useShiftBoardManagement();\n  const [originData, setOriginData] = useState<IShiftBoardManageGetDetailApi[]>([]);\n\n  const { handleSubmit, control, setValue, getValues, formState: { errors } } = useForm<any>({\n    mode: \"onChange\",\n    defaultValues: {\n      //\n    },\n  });\n\n  const URLSearchParams = useQuery();\n  const id = URLSearchParams.get('id') || '';\n  const statusQuery = URLSearchParams.get('status') || '';\n  const period_start_date = URLSearchParams.get('period_start_date') || '';\n  const period_end_date = URLSearchParams.get('period_end_date') || '';\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { isShowCalendar, isShowTargetSetting, staffDetailTargetSetting, tableHeaderListDate, tableHeaderTotalAssignedStaffs, tableHeaderAssignedStaffname, staffInfoOnCalendar, isShowColumn } = state;\n\n  const [isLoading, setLoading] = useState(true);\n\n  // moment.locale(\"ja\");\n\n  const onSubmit = async (formData: any) => {\n    dispatch(setIsShowTargetSetting({\n      isShowTargetSetting: false,\n      staffDetailTargetSetting: {},\n    }));\n\n    try {\n      setLoading(true);\n      const params = {\n        shift_assignment_id: staffDetailTargetSetting?.shift_assignment_id || '',\n        target_shift_number_holiday: Number(formData?.target_shift_number_holiday) || 0,\n        target_shift_number_saturday: Number(formData?.target_shift_number_saturday) || 0,\n        target_shift_number_sunday: Number(formData?.target_shift_number_sunday) || 0,\n        target_shift_number_weekday: Number(formData?.target_shift_number_weekday) || 0,\n      }\n\n      await adminUpdateStaffDetailTargetSetting(params);\n      enqueueSnackbar(USING_TEXT_LIST.successText, { variant: \"success\" });\n      fetchData();\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error?.response?.data?.messages || error?.response?.data?.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const formatDataSave = (isSaveDraft: number) => {\n    let edittedStaffArr: any[] = [];\n\n    originData.forEach((item: any) => {\n      item?.list_staff_detail.forEach((staff: any) => {\n        staff?.shift_detail.forEach((staffDetail: any) => {\n\n          // filter which staff has editted\n          tableHeaderAssignedStaffname.forEach((child: any) => {\n            if (item?.group_id !== child?.group_id) return;\n            child?.list_staff_detail.forEach((childStaff: any) => {\n              if (staff?.staff_id !== childStaff?.staff_id) return;\n              let childArr: any[] = [];\n\n              childStaff.shift_detail.forEach((childStaffDetail: any) => {\n                if (staffDetail?.date_register !== childStaffDetail?.date_register) return;\n                if (staffDetail?.shift_detail_status !== childStaffDetail?.shift_detail_status || staffDetail?.admin_assign_status !== childStaffDetail?.admin_assign_status) {\n\n                  childArr = [...childArr, {\n                    staff_shift_detail_id: childStaffDetail?.staff_shift_detail_id ?? '',\n                    shift_detail_status: childStaffDetail?.shift_detail_status,\n                    admin_assign_status: childStaffDetail?.admin_assign_status,\n                    date_register: childStaffDetail?.date_register,\n                  }];\n                }\n              })\n\n              if (childArr.length > 0) {\n                edittedStaffArr = [...edittedStaffArr,\n                {\n                  assignment_id: childStaff?.assignment_id,\n                  shift_assignment_id: childStaff?.shift_assignment_id,\n                  list_shift_detail: childArr,\n                }];\n              }\n            })\n          })\n\n        })\n      })\n    })\n\n    return {\n      shift_management_id: id,\n      admin_save: isSaveDraft,\n      assign_staff: edittedStaffArr,\n    };\n  }\n\n  const handleSaveDraft = async () => {\n    try {\n      setLoading(true);\n      const formattedDataSave = formatDataSave(0); // 0 is saveDraft\n      await adminSaveDraftOrPublishShiftAssignmentApi(formattedDataSave);\n\n      enqueueSnackbar(USING_TEXT_LIST.successText, { variant: \"success\" });\n      fetchData();\n\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error?.response?.data?.messages || error?.response?.data?.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Pop up 1 Calendar\n\n  const handleCloseCalendar = () => {\n    dispatch(setIsShowCalendar({\n      isShowCalendar: false,\n      staffInfoOnCalendar: {},\n    }));\n  };\n\n  const handleSaveFromChild = (data: any[] = []) => {\n    if (data?.length === 0) return;\n    const formattedData = data.map((item: any) => (\n      {\n        ...item,\n        date: moment(item?.date).format('YYYY-MM-DD'),\n      }\n    ))\n\n    const updateExpectedAssignOfStaff = tableHeaderAssignedStaffname.map((item: any) => {\n      return {\n        ...item,\n        list_staff_detail: item?.list_staff_detail.map((staff: any) => {\n          if (staff?.staff_id === staffInfoOnCalendar.staffId) {\n            return {\n              ...staff,\n              shift_detail: staff?.shift_detail.map((staffDetail: any) => {\n                const obj = { ...staffDetail };\n                formattedData?.length > 0 && formattedData?.forEach((temp: any) => {\n                  if (staffDetail?.date_register === temp?.date) {\n                    obj.shift_detail_status = Number(temp?.status ?? 0);\n                  }\n                })\n                return obj;\n              })\n            }\n          } else {\n            return {\n              ...staff,\n            }\n          }\n        })\n      }\n    })\n\n    dispatch(setHeaderAssignedStaffName(updateExpectedAssignOfStaff));\n    dispatch(setIsShowCalendar({\n      isShowCalendar: false,\n      staffInfoOnCalendar: {},\n    }));\n  }\n\n  // Pop up 2 Publish\n  const showPopupPublish = () => {\n    setOpenPop2(true);\n  };\n\n  const handleClosePop2 = () => {\n    setOpenPop2(false);\n  };\n\n  const handlePublish = async (data: any) => {\n    setOpenPop2(false);\n\n    try {\n      setLoading(true);\n      const formattedDataSave = formatDataSave(1); // 1 is publish\n\n      await adminSaveDraftOrPublishShiftAssignmentApi(formattedDataSave);\n\n      enqueueSnackbar(USING_TEXT_LIST.successText, { variant: \"success\" });\n      fetchData();\n\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error?.response?.data?.messages || error?.response?.data?.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Pop up 3 Target Setting\n  const handleCloseTargetSetting = () => {\n    dispatch(setIsShowTargetSetting({\n      isShowTargetSetting: false,\n      staffDetailTargetSetting: {},\n    }));\n  };\n\n  const [openPop2, setOpenPop2] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        shift_management_id: id,\n        period_start_date,\n        period_end_date,\n      }\n      const res = await getDetailShiftBoardMangementApi(params);\n\n      // Format big data\n      const calculateAssignedDaysOfStaff = calculateAssignedDaysOfStaffByDateType(res[0]?.date_info, res);\n      const formatAddStaffName = formatTableAssignedStaffName(calculateAssignedDaysOfStaff);\n      const formatedTableAssignedStaffName = handleFormatDataWithCheckbox(formatAddStaffName);\n      console.log(formatedTableAssignedStaffName);\n      setOriginData(formatedTableAssignedStaffName);\n\n      // Format total assignment staffs\n      const formateTotalAssignedStaff = formatListTotalAssignedStaffs(res);\n      const formatedTableHeaderTotalAssignedStaffs = calculateTotalAssignedStaffWithCheckBox(formatedTableAssignedStaffName, formateTotalAssignedStaff);\n\n      // Format date type arrow\n      const formatedTableHeaderlist = formatTableHederListDate(res[0]?.date_info);\n\n      dispatch(setHeaderDataList({ formatedTableAssignedStaffName, formatedTableHeaderTotalAssignedStaffs, formatedTableHeaderlist }))\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    setValue('target_shift_number_weekday', staffDetailTargetSetting?.target_shift_number_weekday || 0);\n    setValue('target_shift_number_saturday', staffDetailTargetSetting?.target_shift_number_saturday || 0);\n    setValue('target_shift_number_sunday', staffDetailTargetSetting?.target_shift_number_sunday || 0);\n    setValue('target_shift_number_holiday', staffDetailTargetSetting?.target_shift_number_holiday || 0);\n  }, [staffDetailTargetSetting])\n\n  return (\n    <ScreenLoader isLoading={isLoading}>\n      <TodosDispatch.Provider value={{ state, dispatch }}>\n        <Box margin=\"1rem\" style={{ height: \"auto\" }}>\n          {isShowColumn ? (\n            <Tooltip\n              title=\"実績当直数を非表示\"\n              arrow={true}\n              TransitionComponent={Zoom}\n              placement=\"top\"\n              classes={{ tooltip: classes.paddingTooltip }}\n            >\n              <RemoveIcon className={classes.cssAddRemoveColumnBtn} onClick={() => {\n                dispatch(setIsShowColumn(false))\n              }} />\n            </Tooltip>\n          ) : (\n            <Tooltip\n              title=\"実績当直数を表示\"\n              arrow={true}\n              TransitionComponent={Zoom}\n              placement=\"top\"\n              classes={{ tooltip: classes.paddingTooltip }}\n            >\n              <AddIcon className={classes.cssAddRemoveColumnBtn} onClick={() => {\n                dispatch(setIsShowColumn(true))\n              }} />\n            </Tooltip>\n          )}\n          <TableContainer component={Paper} className={clsx(classes.stickyTableFull, classes.tableContainerRadiusTop)} >\n            <Table\n              stickyHeader={true}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"sticky table\"\n            >\n              <DataTableHeadCalendar\n                key={`table_header_staff_assignment`}\n                classes={classes}\n                data={tableHeaderAssignedStaffname}\n                tableHeaderTotalAssignedStaffs={tableHeaderTotalAssignedStaffs}\n                tableHeaderListDate={tableHeaderListDate}\n                isShowColumn={isShowColumn}\n              />\n              <TableBody >\n                {tableHeaderAssignedStaffname.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={tableHeaderListDate.length} align=\"center\">\n                      データがありません。\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  <>\n                    {/* Render Staffs Shift Assignment */}\n                    {tableHeaderAssignedStaffname.map((item, index) => (\n                      <DataTableBody\n                        key={`table_body_staff_assignment_${String(index)}`}\n                        data={item}\n                        index={index}\n                        classes={classes}\n                        isShowColumn={isShowColumn}\n                      />\n                    ))}\n                  </>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          <Box className={classes.cssFooter}>\n            <Link to={`${pathname}/printOrDownload?id=${id}&period_start_date=${period_start_date}&period_end_date=${period_end_date}`} style={{ textDecoration: 'none' }}>\n              <PillButton\n                type=\"button\"\n                className={classes.cssSaveButton}\n                style={{\n                  background: \"#27a8e0\",\n                  color: \"#fff\",\n                  fontSize: \"20px\",\n                  marginRight: \"20px\",\n                }}\n              >\n                印刷/ダウンロード\n              </PillButton>\n            </Link>\n            <PillButton\n              type=\"button\"\n              className={classes.cssSaveButton}\n              disabled={statusQuery === '2'}\n              style={{\n                background: \"#27a8e0\",\n                color: \"#fff\",\n                fontSize: \"20px\",\n                marginRight: \"20px\",\n              }}\n              onClick={handleSaveDraft}\n            >\n              下書き保存\n            </PillButton>\n            <PillButton\n              type=\"button\"\n              className={classes.cssSaveButton}\n              disabled={statusQuery === '2'}\n              style={{ background: \"#27a8e0\", color: \"#fff\", fontSize: \"20px\" }}\n              onClick={showPopupPublish}\n            >\n              公開/修正\n            </PillButton>\n          </Box>\n\n          {/* ------------------------------------------Show Pop Up Calendar-------------------------------------------------------- */}\n          <Dialog\n            onClose={handleCloseCalendar}\n            aria-labelledby=\"customized-dialog-title\"\n            open={isShowCalendar}\n            maxWidth=\"sm\"\n          >\n            <DialogContent dividers={true}>\n              <div style={{ display: \"flex\", alignItems: 'center', justifyContent: \"center\", flexDirection: 'column' }}>\n                <CustomCalendar\n                  // selectedDate={selectedDate}\n                  // handleDateChange={handleDateChange}\n                  handleSaveFromChild={handleSaveFromChild}\n                />\n              </div>\n            </DialogContent>\n          </Dialog>\n\n          {/* ------------------------------------------Show Pop Up Target Setting-------------------------------------------------------- */}\n          <Dialog\n            onClose={handleCloseTargetSetting}\n            aria-labelledby=\"customized-dialog-title\"\n            open={isShowTargetSetting || false}\n            maxWidth=\"md\"\n          >\n            <DialogContent dividers={true}>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <h2 style={{ textAlign: 'center' }}>目標当直数設定</h2>\n                <Grid container style={{ display: 'flex', alignItems: 'center', width: '500px', justifyContent: 'center' }}>\n                  <Grid item lg={4} style={{ textAlign: 'center' }}>\n                    {`${staffDetailTargetSetting?.staff_name ?? ' '} 先生`}\n                  </Grid>\n                  <Grid item lg={2}>\n                    <Controller\n                      name=\"target_shift_number_weekday\"\n                      control={control}\n                      defaultValue={staffDetailTargetSetting?.target_shift_number_weekday || 0}\n                      render={({ field }) => (\n                        <FormControl variant=\"outlined\">\n                          <TextField\n                            {...field}\n                            inputRef={field.ref}\n                            size=\"small\"\n                            label=\"平\"\n                            onChange={(e) => {\n                              e.preventDefault();\n                              const val = e.target.value.replace(/[^0-9]/g, \"\") || \"\";\n                              field.onChange(val);\n                            }}\n                            inputProps={{ maxLength: 2 }}\n                            style={{ width: \"50px\", margin: \"0.5rem\" }}\n                            error={!!errors?.target_shift_number_weekday}\n                            helperText={errors?.target_shift_number_weekday?.message}\n                          />\n                        </FormControl>\n                      )}\n                    />\n                  </Grid>\n                  <Grid item lg={2}>\n                    <Controller\n                      name=\"target_shift_number_saturday\"\n                      control={control}\n                      defaultValue={staffDetailTargetSetting?.target_shift_number_saturday || 0}\n                      render={({ field }) => (\n                        <FormControl variant=\"outlined\">\n                          <TextField\n                            {...field}\n                            inputRef={field.ref}\n                            size=\"small\"\n                            label=\"土\"\n                            onChange={(e) => {\n                              e.preventDefault();\n                              const val = e.target.value.replace(/[^0-9]/g, \"\") || \"\";\n                              field.onChange(val);\n                            }}\n                            inputProps={{ maxLength: 2 }}\n                            style={{ width: \"50px\", margin: \"0.5rem\" }}\n                            error={!!errors?.target_shift_number_saturday}\n                            helperText={errors?.target_shift_number_saturday?.message}\n                          />\n                        </FormControl>\n                      )}\n                    />\n                  </Grid>\n                  <Grid item lg={2}>\n                    <Controller\n                      name=\"target_shift_number_sunday\"\n                      control={control}\n                      defaultValue={staffDetailTargetSetting?.target_shift_number_sunday || 0}\n                      render={({ field }) => (\n                        <FormControl variant=\"outlined\">\n                          <TextField\n                            {...field}\n                            inputRef={field.ref}\n                            size=\"small\"\n                            label=\"日\"\n                            onChange={(e) => {\n                              e.preventDefault();\n                              const val = e.target.value.replace(/[^0-9]/g, \"\") || \"\";\n                              field.onChange(val);\n                            }}\n                            inputProps={{ maxLength: 2 }}\n                            style={{ width: \"50px\", margin: \"0.5rem\" }}\n                            error={!!errors?.target_shift_number_sunday}\n                            helperText={errors?.target_shift_number_sunday?.message}\n                          />\n                        </FormControl>\n                      )}\n                    />\n                  </Grid>\n                  <Grid item lg={2}>\n                    <Controller\n                      name=\"target_shift_number_holiday\"\n                      control={control}\n                      defaultValue={staffDetailTargetSetting?.target_shift_number_holiday || 0}\n                      render={({ field }) => (\n                        <FormControl variant=\"outlined\">\n                          <TextField\n                            {...field}\n                            inputRef={field.ref}\n                            size=\"small\"\n                            label=\"祝\"\n                            onChange={(e) => {\n                              e.preventDefault();\n                              const val = e.target.value.replace(/[^0-9]/g, \"\") || \"\";\n                              field.onChange(val);\n                            }}\n                            inputProps={{ maxLength: 2 }}\n                            style={{ width: \"50px\", margin: \"0.5rem\" }}\n                            error={!!errors?.target_shift_number_holiday}\n                            helperText={errors?.target_shift_number_holiday?.message}\n                          />\n                        </FormControl>\n                      )}\n                    />\n                  </Grid>\n                  <PillButton\n                    type=\"submit\"\n                    className={classes.cssSaveButtonSmallSize}\n                    style={{ background: \"#27a8e0\", color: \"#fff\", fontSize: \"20px\", marginTop: '2rem' }}\n                  >\n                    保存\n                  </PillButton>\n                </Grid>\n              </form>\n            </DialogContent>\n          </Dialog>\n\n          {/* ------------------------------------------Show Pop Up Publish-------------------------------------------------------- */}\n          <Dialog\n            onClose={handleClosePop2}\n            aria-labelledby=\"customized-dialog-title\"\n            open={openPop2}\n            maxWidth=\"md\"\n          >\n            <DialogContent dividers={true}>\n              <div className={classes.cssPopup2}>\n                <Typography variant=\"h4\">公開/編集を確定</Typography>\n                <Typography variant=\"h6\" style={{ marginTop: '2rem', width: '600px' }}>説明文が入ります。説明文が入ります。説明文が入ります。説明文が入ります。説明文が入ります。</Typography>\n                <div className={classes.cssPopup2Checkbox}>\n                  <Checkbox />\n                  <Typography variant=\"h6\">スタッフに公開/変更を通知する</Typography>\n                </div>\n                <PillButton\n                  type=\"button\"\n                  className={classes.cssSaveButton}\n                  style={{ background: \"#27a8e0\", color: \"#fff\", fontSize: \"20px\", marginTop: '2rem' }}\n                  onClick={handlePublish}\n                >\n                  保存\n                </PillButton>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </Box>\n      </TodosDispatch.Provider>\n    </ScreenLoader>\n  );\n};\n\nexport default ShiftBoardManagementEdit;\n","export const USING_TEXT_LIST = {\n  successText : \"保存しました。\",\n  noData: 'データはありません。',\n  succeedDelete: '削除しました。',\n}\n\nexport const ROWS_PER_PAGES = [20, 50, 100]"],"names":["adminInitializationSettingApi","params","ApiClient","data","adminInitializationGetListApi","adminGroupSettingGetApi","adminGroupSettingGetListStaffApi","adminGroupSettingApi","adminGroupSettingDeleteApi","id","adminRequiredStaffSettingGetApi","adminRequiredStaffSettingSaveApi","adminHolidaySettingGetApi","adminHolidaySettingSaveApi","adminHolidaySettingDeleteApi","adminNotificatinSettingGetApi","adminNotificatinSettingSaveApi","adminChangeInfoSettingSaveApi","adminGetStaffListApi","adminGetStaffDetailApi","getListStaffFileCSV","filename","updateListStaffFileCSV","upload_file","deleteStaffDetailApi","adminAddStaffPostApi","adminUpdateStaffPostApi","getShiftBoardManagementListApi","getDetailShiftBoardMangementApi","adminUpdateStaffDetailTargetSetting","adminSaveDraftOrPublishShiftAssignmentApi","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","children","isLoading","classes","Backdrop","className","open","onClick","CircularProgress","root","width","cssSaveButton","setStyleCalendar","minHeight","maxWidth","cursor","fontSize","margin","border","background","palette","primary","light","position","backgroundColor","maxHeight","display","alignItem","justifyContent","height","disabled","padding","setStyleDayInCalendar","flexDirection","setStyleShiftStatusCircle","marginTop","borderRadius","setStyleShiftStatusTriangle","setStyleShiftStatusClose","paddingTooltip","wordWrap","fontFamily","fontWeight","letterSpacing","lineHeight","borderTadius","tableEllipsis","textAlign","whiteSpace","overflow","textOverflow","tableLayout","setColorCalendarDay","createContext","handleSaveFromChild","useContext","TodosDispatch","state","staffInfoOnCalendar","tableHeaderAssignedStaffname","LocalizedUtils","dispatch","date","staffName","momentUtils","useState","moment","date_info","selectedDate","setSelectedDate","daysOnCalendar","setDaysOnCalendar","Array","from","length","daysInMonth","_","i","format","status","shiftStatusList","setShiftStatusList","showShiftStatus","isShow","forEach","item","Close","Circle","createTheme","components","MuiButtonBase","styleOverrides","months","weekdays","calendar_start_week_day","weekdaysShort","useEffect","shift_detail","formattedShiftDetail","map","date_register","shift_detail_status","val","Number","style","ScreenLoader","ThemeProvider","M","libInstance","utils","locale","rightArrowButtonProps","opacity","pointerEvents","leftArrowButtonProps","onChange","allowKeyboardControl","renderDay","day","dayInCurrentMonth","dayComponent","Badge","marginRight","minWidth","tempArr","index","String","handleChangeShiftStatusOnCalendar","Grid","includes","PillButton","type","returnLeftWidth","dateType","returnWidthOfDateType","formatTableAssignedStaffName","arr","dateData","assigned_staff_name","assigned_staffs","list_staff_detail","staff","detail","admin_assign_status","isSelectedOtherGrp","formatListTotalAssignedStaffs","number_staff","itemData","itemVal","arrVal","formatTableHederListDate","align","label","date_type","showDateTypeColumn","checkDateType","dateTypeArr","calculateAssignedDaysOfStaffByDateType","checkArr","assignedDaysOfStaffByDateType","admin_assigned_weekday","admin_assigned_saturday","admin_assigned_sunday","admin_assigned_holiday","handleFormatDataWithCheckbox","setAlertData","isAlert","isGrey","checkIsSelectedOtherGrp","obj","temp","group_id","tempDetail","staff_id","dateDetail","addStaffNameToHeader","objDate","staff_name","calculateTotalAssignedStaffWithCheckBox","origindata","checkData","cloneData","tempObj","types","setHeaderAssignedStaffName","payload","setIsShowCalendar","setIsShowTargetSetting","setIsShowColumn","CheckboxStatus","isCheck","groupId","staffId","React","checkBoxStatus","setCheckboxStatus","tableHeaderTotalAssignedStaffs","handleUpdateCheckboxStatus","useCallback","console","log","newData","setOnOffCheckboxStatus","setAlertWhenContinuousCheck","checkIsSelectedOtherGroup","filter","addStaffNameAndCalculateSubtotal","cloneTableHeaderTotalAssignedStaffs","calculateTotalAssignedStaffs","Checkbox","checked","RowChild","isShowColumn","handleShowTableCellColor","col","TableRow","setRowBodyStyle","setBorderNone","TableCell","paddingLeft","left","isShowCalendar","borderLeft","group_name","target_shift_number_weekday","target_shift_number_saturday","target_shift_number_sunday","target_shift_number_holiday","isShowTargetSetting","staffDetailTargetSetting","shift_assignment_id","paddingRight","borderRight","DataTableBody","colSpan","display_type","DataTableHeadCalendar","tableHeaderListDate","TableHead","cssHeaderBorder","setHeaderPosition","setBorderTopColor","setBorderLeftAndRightColor","setBorderTopRight","borderTopLeftRadius","borderBottom","value","borderTop","Typography","Tooltip","title","join","arrow","TransitionComponent","Zoom","placement","tooltip","rowOnHead","alignCenterTitle","tableTh","setBorderBottomColor","action","holidayListData","tableHeaderStaffNameArr","formatedTableAssignedStaffName","formatedTableHeaderTotalAssignedStaffs","formatedTableHeaderlist","initialState","calendarData","loadingCalendar","errorCalendar","desiredTime","filterPublicDays","filterSelectedCallDays","filterSelectedDays","weekdayStart","weekdayEnd","weekendStart","weekendEnd","holidayStart","holidayEnd","publicHoliday","publicHolidayList","showTime","possibleMonthCode","possibleDayCode","monthSynchronized","yearSynchronized","daySynchronized","regularHolidayFriday","regularHolidayMonday","regularHolidaySaturday","regularHolidaySunday","regularHolidayThursday","regularHolidayTuesday","regularHolidayWednesday","privateHolidays","isRedirect","currentDaySynchronized","useReducer","reducer","table","overflowX","scrollBehavior","marginBottom","cssHeaderRow","setBorderRight","cssSaveButtonSmallSize","cssFooter","top","stickyTableCell","stickyTableFull","borderTopRightRadius","tableContainerRadiusTop","cssPopup2","alignItems","cssPopup2Checkbox","cssAddRemoveColumnBtn","useTableStyles","pathname","useHistory","location","useShiftBoardManagement","originData","setOriginData","useForm","mode","defaultValues","handleSubmit","control","setValue","errors","getValues","formState","URLSearchParams","useQuery","get","statusQuery","period_start_date","period_end_date","enqueueSnackbar","useSnackbar","setLoading","onSubmit","formData","USING_TEXT_LIST","variant","fetchData","errList","response","messages","isArray","formatDataSave","isSaveDraft","edittedStaffArr","staffDetail","child","childStaff","childArr","childStaffDetail","staff_shift_detail_id","assignment_id","list_shift_detail","shift_management_id","admin_save","assign_staff","handleSaveDraft","formattedDataSave","handlePublish","setOpenPop2","openPop2","res","calculateAssignedDaysOfStaff","formatAddStaffName","formateTotalAssignedStaff","Box","Remove","Add","TableContainer","component","Paper","clsx","Table","stickyHeader","TableBody","to","textDecoration","Dialog","onClose","DialogContent","dividers","formattedData","updateExpectedAssignOfStaff","container","lg","name","defaultValue","render","field","FormControl","TextField","inputRef","ref","size","e","preventDefault","target","replace","inputProps","maxLength","error","helperText","message","successText","noData","succeedDelete","ROWS_PER_PAGES"],"sourceRoot":""}