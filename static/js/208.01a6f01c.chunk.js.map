{"version":3,"file":"static/js/208.01a6f01c.chunk.js","mappings":"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","sources":["pages/admin/shiftBoardManagement/styles.ts","pages/admin/shiftBoardManagement/index.tsx"],"sourcesContent":["import { Theme } from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: '100%',\n  },\n  cssNameTitle: {\n    color: theme.palette.primary.main,\n  },\n  cssRowTable: {\n    fontSize: '16px !important',\n  },\n}));\nexport default useStyles;\n","import {\n  Box, TableCell,\n} from \"@mui/material\";\nimport clsx from \"clsx\";\nimport { isArray } from \"lodash\";\nimport moment from \"moment\";\nimport { useSnackbar } from \"notistack\";\nimport { stringify } from \"querystring\";\nimport React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getShiftBoardManagementListApi } from \"../../../api/adminApi\";\nimport PillButton from \"../../../components/atoms/Buttons/PillButton\";\nimport DataTable from \"../../../components/DataTable\";\nimport ScreenLoader from \"../../../components/organisms/ScreenLoader\";\nimport useStyles from \"./styles\";\nimport { IShiftBoardManageGetApi } from \"./type\";\n\nconst ShiftBoardManagement: React.FC = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const {\n    location: { pathname },\n  } = history;\n\n  const [isLoading, setLoading] = useState(true);\n\n  const [listShiftBoard, setlistShiftBoard] = useState<IShiftBoardManageGetApi[]>([]);\n\n  const columns: any[] = [\n    {\n      id: \"period\",\n      align: \"center\",\n      label: \"期間\",\n      width: \"150px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            component=\"th\"\n            id={`enhanced-table-checkbox-${index}`}\n            scope=\"row\"\n            className={classes.cssRowTable}\n          >\n            <Link to={`${pathname}/edit?id=${row?.id}&status=${row?.status_value}&period_start_date=${row?.period_start_date}&period_end_date=${row?.period_end_date}`} className={classes.cssNameTitle}>\n              {row?.period || ''}\n            </Link>\n          </TableCell>\n        );\n      },\n    },\n    {\n      id: \"status\",\n      align: \"center\",\n      label: \"ステータス\",\n      width: \"200px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            className={classes.cssRowTable}\n          >\n            {row?.status || ''}\n          </TableCell>\n        );\n      },\n    },\n    {\n      id: \"dateSubmit\",\n      align: \"center\",\n      label: \"提出期限\",\n      width: \"150px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell\n            key={index}\n            align={this.align}\n            className={classes.cssRowTable}\n          >\n            {row?.date_submit || ''}\n          </TableCell>\n        );\n      },\n    },\n    {\n      id: \"action\",\n      align: \"center\",\n      label: \"リンク\",\n      width: \"250px\",\n      content(row: any, index: number, i: number) {\n        return (\n          <TableCell key={index} align={this.align}>\n            {row?.status_value === 2 ? (\n              <PillButton\n                type=\"button\"\n                style={{ background: \"#27a8e0\", color: \"#fff\", fontSize: \"20px\", width: '230px', maxHeight: '30px' }}\n              >\n                印刷\n              </PillButton>\n            ) : ''}\n          </TableCell>\n        );\n      },\n    },\n  ];\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const res = await getShiftBoardManagementListApi();\n      setlistShiftBoard(\n        res.sort((a: any, b: any) => +new Date(b.date_submit) - +new Date(a.date_submit))\n      );\n    } catch (error: any) {\n      const errList = error?.response?.data?.messages;\n      if (isArray(errList) && errList?.length > 0) {\n        errList.forEach((item) => {\n          enqueueSnackbar(item || '',\n            { variant: \"error\" }\n          );\n        })\n      } else {\n        enqueueSnackbar(\n          error.response.data.messages || error.response.data.errors || \"サーバー側でエラーが発生しました。\",\n          { variant: \"error\" }\n        );\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <ScreenLoader isLoading={isLoading}>\n      <Box maxWidth=\"1200px\" margin=\"1rem\">\n        <Box marginLeft=\"2rem\">\n          <DataTable\n            data={listShiftBoard}\n            columns={columns}\n            showDeleteAndCheckBoxIcon={false}\n            // setFullRow={fullRowTable}\n            // rowsPerPageOptions={rowPerPage}\n            setHeaderColor=\"#e7e7e7\"\n          // showPagination={false}\n          />\n        </Box>\n      </Box>\n    </ScreenLoader>\n  );\n};\n\nexport default ShiftBoardManagement;\n"],"names":["makeStyles","theme","createStyles","root","width","cssNameTitle","color","palette","primary","main","cssRowTable","fontSize","classes","useStyles","enqueueSnackbar","useSnackbar","pathname","useHistory","location","useState","isLoading","setLoading","listShiftBoard","setlistShiftBoard","columns","id","align","label","content","row","index","i","TableCell","this","component","scope","className","to","status_value","period_start_date","period_end_date","period","status","date_submit","PillButton","type","style","background","maxHeight","fetchData","getShiftBoardManagementListApi","res","sort","a","b","Date","errList","response","data","messages","isArray","length","forEach","item","variant","errors","useEffect","ScreenLoader","Box","maxWidth","margin","marginLeft","DataTable","showDeleteAndCheckBoxIcon","setHeaderColor"],"sourceRoot":""}